/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListAuthors200ResponseGroupByInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuthors200ResponseGroupByInner{}

// ListAuthors200ResponseGroupByInner A group of entities and their count
type ListAuthors200ResponseGroupByInner struct {
	// The OpenAlex ID or raw value of the group_by parameter for members of this group
	Key *string `json:"key,omitempty"`
	// The display_name or raw value of the group_by parameter for members of this group
	KeyDisplayName *string `json:"key_display_name,omitempty"`
	// The number of entities in the group
	Count *int32 `json:"count,omitempty"`
}

// NewListAuthors200ResponseGroupByInner instantiates a new ListAuthors200ResponseGroupByInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuthors200ResponseGroupByInner() *ListAuthors200ResponseGroupByInner {
	this := ListAuthors200ResponseGroupByInner{}
	return &this
}

// NewListAuthors200ResponseGroupByInnerWithDefaults instantiates a new ListAuthors200ResponseGroupByInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuthors200ResponseGroupByInnerWithDefaults() *ListAuthors200ResponseGroupByInner {
	this := ListAuthors200ResponseGroupByInner{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ListAuthors200ResponseGroupByInner) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseGroupByInner) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ListAuthors200ResponseGroupByInner) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ListAuthors200ResponseGroupByInner) SetKey(v string) {
	o.Key = &v
}

// GetKeyDisplayName returns the KeyDisplayName field value if set, zero value otherwise.
func (o *ListAuthors200ResponseGroupByInner) GetKeyDisplayName() string {
	if o == nil || IsNil(o.KeyDisplayName) {
		var ret string
		return ret
	}
	return *o.KeyDisplayName
}

// GetKeyDisplayNameOk returns a tuple with the KeyDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseGroupByInner) GetKeyDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.KeyDisplayName) {
		return nil, false
	}
	return o.KeyDisplayName, true
}

// HasKeyDisplayName returns a boolean if a field has been set.
func (o *ListAuthors200ResponseGroupByInner) HasKeyDisplayName() bool {
	if o != nil && !IsNil(o.KeyDisplayName) {
		return true
	}

	return false
}

// SetKeyDisplayName gets a reference to the given string and assigns it to the KeyDisplayName field.
func (o *ListAuthors200ResponseGroupByInner) SetKeyDisplayName(v string) {
	o.KeyDisplayName = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ListAuthors200ResponseGroupByInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseGroupByInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ListAuthors200ResponseGroupByInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ListAuthors200ResponseGroupByInner) SetCount(v int32) {
	o.Count = &v
}

func (o ListAuthors200ResponseGroupByInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuthors200ResponseGroupByInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.KeyDisplayName) {
		toSerialize["key_display_name"] = o.KeyDisplayName
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

type NullableListAuthors200ResponseGroupByInner struct {
	value *ListAuthors200ResponseGroupByInner
	isSet bool
}

func (v NullableListAuthors200ResponseGroupByInner) Get() *ListAuthors200ResponseGroupByInner {
	return v.value
}

func (v *NullableListAuthors200ResponseGroupByInner) Set(val *ListAuthors200ResponseGroupByInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuthors200ResponseGroupByInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuthors200ResponseGroupByInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuthors200ResponseGroupByInner(val *ListAuthors200ResponseGroupByInner) *NullableListAuthors200ResponseGroupByInner {
	return &NullableListAuthors200ResponseGroupByInner{value: val, isSet: true}
}

func (v NullableListAuthors200ResponseGroupByInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuthors200ResponseGroupByInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


