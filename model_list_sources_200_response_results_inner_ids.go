/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListSources200ResponseResultsInnerIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListSources200ResponseResultsInnerIds{}

// ListSources200ResponseResultsInnerIds All the external identifiers that we know about for this source. IDs are expressed as URIs whenever possible.
type ListSources200ResponseResultsInnerIds struct {
	Openalex *string `json:"openalex,omitempty"`
	IssnL *string `json:"issn_l,omitempty"`
	Issn []string `json:"issn,omitempty"`
	Mag *string `json:"mag,omitempty"`
	Fatcat *string `json:"fatcat,omitempty"`
	Wikidata *string `json:"wikidata,omitempty"`
}

// NewListSources200ResponseResultsInnerIds instantiates a new ListSources200ResponseResultsInnerIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSources200ResponseResultsInnerIds() *ListSources200ResponseResultsInnerIds {
	this := ListSources200ResponseResultsInnerIds{}
	return &this
}

// NewListSources200ResponseResultsInnerIdsWithDefaults instantiates a new ListSources200ResponseResultsInnerIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSources200ResponseResultsInnerIdsWithDefaults() *ListSources200ResponseResultsInnerIds {
	this := ListSources200ResponseResultsInnerIds{}
	return &this
}

// GetOpenalex returns the Openalex field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetOpenalex() string {
	if o == nil || IsNil(o.Openalex) {
		var ret string
		return ret
	}
	return *o.Openalex
}

// GetOpenalexOk returns a tuple with the Openalex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetOpenalexOk() (*string, bool) {
	if o == nil || IsNil(o.Openalex) {
		return nil, false
	}
	return o.Openalex, true
}

// HasOpenalex returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasOpenalex() bool {
	if o != nil && !IsNil(o.Openalex) {
		return true
	}

	return false
}

// SetOpenalex gets a reference to the given string and assigns it to the Openalex field.
func (o *ListSources200ResponseResultsInnerIds) SetOpenalex(v string) {
	o.Openalex = &v
}

// GetIssnL returns the IssnL field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetIssnL() string {
	if o == nil || IsNil(o.IssnL) {
		var ret string
		return ret
	}
	return *o.IssnL
}

// GetIssnLOk returns a tuple with the IssnL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetIssnLOk() (*string, bool) {
	if o == nil || IsNil(o.IssnL) {
		return nil, false
	}
	return o.IssnL, true
}

// HasIssnL returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasIssnL() bool {
	if o != nil && !IsNil(o.IssnL) {
		return true
	}

	return false
}

// SetIssnL gets a reference to the given string and assigns it to the IssnL field.
func (o *ListSources200ResponseResultsInnerIds) SetIssnL(v string) {
	o.IssnL = &v
}

// GetIssn returns the Issn field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetIssn() []string {
	if o == nil || IsNil(o.Issn) {
		var ret []string
		return ret
	}
	return o.Issn
}

// GetIssnOk returns a tuple with the Issn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetIssnOk() ([]string, bool) {
	if o == nil || IsNil(o.Issn) {
		return nil, false
	}
	return o.Issn, true
}

// HasIssn returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasIssn() bool {
	if o != nil && !IsNil(o.Issn) {
		return true
	}

	return false
}

// SetIssn gets a reference to the given []string and assigns it to the Issn field.
func (o *ListSources200ResponseResultsInnerIds) SetIssn(v []string) {
	o.Issn = v
}

// GetMag returns the Mag field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetMag() string {
	if o == nil || IsNil(o.Mag) {
		var ret string
		return ret
	}
	return *o.Mag
}

// GetMagOk returns a tuple with the Mag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetMagOk() (*string, bool) {
	if o == nil || IsNil(o.Mag) {
		return nil, false
	}
	return o.Mag, true
}

// HasMag returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasMag() bool {
	if o != nil && !IsNil(o.Mag) {
		return true
	}

	return false
}

// SetMag gets a reference to the given string and assigns it to the Mag field.
func (o *ListSources200ResponseResultsInnerIds) SetMag(v string) {
	o.Mag = &v
}

// GetFatcat returns the Fatcat field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetFatcat() string {
	if o == nil || IsNil(o.Fatcat) {
		var ret string
		return ret
	}
	return *o.Fatcat
}

// GetFatcatOk returns a tuple with the Fatcat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetFatcatOk() (*string, bool) {
	if o == nil || IsNil(o.Fatcat) {
		return nil, false
	}
	return o.Fatcat, true
}

// HasFatcat returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasFatcat() bool {
	if o != nil && !IsNil(o.Fatcat) {
		return true
	}

	return false
}

// SetFatcat gets a reference to the given string and assigns it to the Fatcat field.
func (o *ListSources200ResponseResultsInnerIds) SetFatcat(v string) {
	o.Fatcat = &v
}

// GetWikidata returns the Wikidata field value if set, zero value otherwise.
func (o *ListSources200ResponseResultsInnerIds) GetWikidata() string {
	if o == nil || IsNil(o.Wikidata) {
		var ret string
		return ret
	}
	return *o.Wikidata
}

// GetWikidataOk returns a tuple with the Wikidata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListSources200ResponseResultsInnerIds) GetWikidataOk() (*string, bool) {
	if o == nil || IsNil(o.Wikidata) {
		return nil, false
	}
	return o.Wikidata, true
}

// HasWikidata returns a boolean if a field has been set.
func (o *ListSources200ResponseResultsInnerIds) HasWikidata() bool {
	if o != nil && !IsNil(o.Wikidata) {
		return true
	}

	return false
}

// SetWikidata gets a reference to the given string and assigns it to the Wikidata field.
func (o *ListSources200ResponseResultsInnerIds) SetWikidata(v string) {
	o.Wikidata = &v
}

func (o ListSources200ResponseResultsInnerIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListSources200ResponseResultsInnerIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Openalex) {
		toSerialize["openalex"] = o.Openalex
	}
	if !IsNil(o.IssnL) {
		toSerialize["issn_l"] = o.IssnL
	}
	if !IsNil(o.Issn) {
		toSerialize["issn"] = o.Issn
	}
	if !IsNil(o.Mag) {
		toSerialize["mag"] = o.Mag
	}
	if !IsNil(o.Fatcat) {
		toSerialize["fatcat"] = o.Fatcat
	}
	if !IsNil(o.Wikidata) {
		toSerialize["wikidata"] = o.Wikidata
	}
	return toSerialize, nil
}

type NullableListSources200ResponseResultsInnerIds struct {
	value *ListSources200ResponseResultsInnerIds
	isSet bool
}

func (v NullableListSources200ResponseResultsInnerIds) Get() *ListSources200ResponseResultsInnerIds {
	return v.value
}

func (v *NullableListSources200ResponseResultsInnerIds) Set(val *ListSources200ResponseResultsInnerIds) {
	v.value = val
	v.isSet = true
}

func (v NullableListSources200ResponseResultsInnerIds) IsSet() bool {
	return v.isSet
}

func (v *NullableListSources200ResponseResultsInnerIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSources200ResponseResultsInnerIds(val *ListSources200ResponseResultsInnerIds) *NullableListSources200ResponseResultsInnerIds {
	return &NullableListSources200ResponseResultsInnerIds{value: val, isSet: true}
}

func (v NullableListSources200ResponseResultsInnerIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSources200ResponseResultsInnerIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


