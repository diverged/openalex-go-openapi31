/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListInstitutions200ResponseResultsInnerGeo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstitutions200ResponseResultsInnerGeo{}

// ListInstitutions200ResponseResultsInnerGeo Geographic information about the institution's location.
type ListInstitutions200ResponseResultsInnerGeo struct {
	City *string `json:"city,omitempty"`
	GeonamesCityId *string `json:"geonames_city_id,omitempty"`
	Region *string `json:"region,omitempty"`
	CountryCode *string `json:"country_code,omitempty"`
	Country *string `json:"country,omitempty"`
	Latitude *float32 `json:"latitude,omitempty"`
	Longitude *float32 `json:"longitude,omitempty"`
}

// NewListInstitutions200ResponseResultsInnerGeo instantiates a new ListInstitutions200ResponseResultsInnerGeo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstitutions200ResponseResultsInnerGeo() *ListInstitutions200ResponseResultsInnerGeo {
	this := ListInstitutions200ResponseResultsInnerGeo{}
	return &this
}

// NewListInstitutions200ResponseResultsInnerGeoWithDefaults instantiates a new ListInstitutions200ResponseResultsInnerGeo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstitutions200ResponseResultsInnerGeoWithDefaults() *ListInstitutions200ResponseResultsInnerGeo {
	this := ListInstitutions200ResponseResultsInnerGeo{}
	return &this
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetCity(v string) {
	o.City = &v
}

// GetGeonamesCityId returns the GeonamesCityId field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetGeonamesCityId() string {
	if o == nil || IsNil(o.GeonamesCityId) {
		var ret string
		return ret
	}
	return *o.GeonamesCityId
}

// GetGeonamesCityIdOk returns a tuple with the GeonamesCityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetGeonamesCityIdOk() (*string, bool) {
	if o == nil || IsNil(o.GeonamesCityId) {
		return nil, false
	}
	return o.GeonamesCityId, true
}

// HasGeonamesCityId returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasGeonamesCityId() bool {
	if o != nil && !IsNil(o.GeonamesCityId) {
		return true
	}

	return false
}

// SetGeonamesCityId gets a reference to the given string and assigns it to the GeonamesCityId field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetGeonamesCityId(v string) {
	o.GeonamesCityId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetRegion(v string) {
	o.Region = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetCountry(v string) {
	o.Country = &v
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetLatitude() float32 {
	if o == nil || IsNil(o.Latitude) {
		var ret float32
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetLatitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Latitude) {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasLatitude() bool {
	if o != nil && !IsNil(o.Latitude) {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float32 and assigns it to the Latitude field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetLatitude(v float32) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetLongitude() float32 {
	if o == nil || IsNil(o.Longitude) {
		var ret float32
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) GetLongitudeOk() (*float32, bool) {
	if o == nil || IsNil(o.Longitude) {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerGeo) HasLongitude() bool {
	if o != nil && !IsNil(o.Longitude) {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float32 and assigns it to the Longitude field.
func (o *ListInstitutions200ResponseResultsInnerGeo) SetLongitude(v float32) {
	o.Longitude = &v
}

func (o ListInstitutions200ResponseResultsInnerGeo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstitutions200ResponseResultsInnerGeo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.GeonamesCityId) {
		toSerialize["geonames_city_id"] = o.GeonamesCityId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.CountryCode) {
		toSerialize["country_code"] = o.CountryCode
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Latitude) {
		toSerialize["latitude"] = o.Latitude
	}
	if !IsNil(o.Longitude) {
		toSerialize["longitude"] = o.Longitude
	}
	return toSerialize, nil
}

type NullableListInstitutions200ResponseResultsInnerGeo struct {
	value *ListInstitutions200ResponseResultsInnerGeo
	isSet bool
}

func (v NullableListInstitutions200ResponseResultsInnerGeo) Get() *ListInstitutions200ResponseResultsInnerGeo {
	return v.value
}

func (v *NullableListInstitutions200ResponseResultsInnerGeo) Set(val *ListInstitutions200ResponseResultsInnerGeo) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstitutions200ResponseResultsInnerGeo) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstitutions200ResponseResultsInnerGeo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstitutions200ResponseResultsInnerGeo(val *ListInstitutions200ResponseResultsInnerGeo) *NullableListInstitutions200ResponseResultsInnerGeo {
	return &NullableListInstitutions200ResponseResultsInnerGeo{value: val, isSet: true}
}

func (v NullableListInstitutions200ResponseResultsInnerGeo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstitutions200ResponseResultsInnerGeo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


