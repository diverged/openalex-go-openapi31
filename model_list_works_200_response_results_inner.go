/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListWorks200ResponseResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWorks200ResponseResultsInner{}

// ListWorks200ResponseResultsInner struct for ListWorks200ResponseResultsInner
type ListWorks200ResponseResultsInner struct {
	// The abstract of the work, as an inverted index. This format allows for efficient searching and analysis of the abstract text.
	AbstractInvertedIndex map[string]interface{} `json:"abstract_inverted_index,omitempty"`
	ApcList *ListWorks200ResponseResultsInnerApcList `json:"apc_list,omitempty"`
	ApcPaid *ListWorks200ResponseResultsInnerApcPaid `json:"apc_paid,omitempty"`
	// List of authorship information for the work, including authors and their institutions.
	Authorships []ListWorks200ResponseResultsInnerAuthorshipsInner `json:"authorships,omitempty"`
	BestOaLocation *ListWorks200ResponseResultsInnerBestOaLocation `json:"best_oa_location,omitempty"`
	Biblio *ListWorks200ResponseResultsInnerBiblio `json:"biblio,omitempty"`
	// A URL that displays a list of works that cite this work.
	CitedByApiUrl *string `json:"cited_by_api_url,omitempty"`
	// The number of citations to this work.
	CitedByCount *int32 `json:"cited_by_count,omitempty"`
	// List of concepts (research topics) associated with the work. These are algorithmically inferred based on the work's content.
	Concepts []map[string]interface{} `json:"concepts,omitempty"`
	// OpenAlex IDs of any authors for which authorships.is_corresponding is true.
	CorrespondingAuthorIds []string `json:"corresponding_author_ids,omitempty"`
	// OpenAlex IDs of any institutions found within an authorship for which authorships.is_corresponding is true.
	CorrespondingInstitutionIds []string `json:"corresponding_institution_ids,omitempty"`
	// Number of distinct country_codes among the authorships for this work.
	CountriesDistinctCount *int32 `json:"countries_distinct_count,omitempty"`
	// Cited_by_count for each of the last ten years, binned by year.
	CountsByYear []ListWorks200ResponseResultsInnerCountsByYearInner `json:"counts_by_year,omitempty"`
	// The date this Work object was created in the OpenAlex dataset.
	CreatedDate *string `json:"created_date,omitempty"`
	// The title of this work (same as title).
	DisplayName *string `json:"display_name,omitempty"`
	// The DOI for the work.
	Doi *string `json:"doi,omitempty" validate:"regexp=^https:\\/\\/doi.org\\/10\\\\.\\\\d{4,9}\\/[-._;()\\/:A-Z0-9]+$"`
	// If a work's full text is searchable in OpenAlex, this tells you how we got the text.
	FulltextOrigin *string `json:"fulltext_origin,omitempty"`
	// Information about grants that funded this work.
	Grants []ListWorks200ResponseResultsInnerGrantsInner `json:"grants,omitempty"`
	// Set to true if the work's full text is searchable in OpenAlex.
	HasFulltext *bool `json:"has_fulltext,omitempty"`
	// The OpenAlex ID for this work.
	Id *string `json:"id,omitempty" validate:"regexp=^https:\\/\\/openalex.org\\/W\\\\d+$"`
	Ids *ListWorks200ResponseResultsInnerIds `json:"ids,omitempty"`
	// The sources this work is indexed in.
	IndexedIn []string `json:"indexed_in,omitempty"`
	// Number of distinct institutions among the authorships for this work.
	InstitutionsDistinctCount *int32 `json:"institutions_distinct_count,omitempty"`
	// True if we think this work is paratext.
	IsParatext *bool `json:"is_paratext,omitempty"`
	// True if we know this work has been retracted.
	IsRetracted *bool `json:"is_retracted,omitempty"`
	// A list of keywords associated with this work.
	Keywords []ListKeywords200ResponseResultsInner `json:"keywords,omitempty"`
	// The language of the work in ISO 639-1 format.
	Language *string `json:"language,omitempty"`
	// The license applied to this work at this host. Most toll-access works don't have an explicit license (they're under \"all rights reserved\" copyright), so this field generally has content only if is_oa is true.
	License *string `json:"license,omitempty"`
	// List of locations where the work can be found, including various versions and sources.
	Locations []ListWorks200ResponseResultsInnerLocationsInner `json:"locations,omitempty"`
	// Number of locations for this work.
	LocationsCount *int32 `json:"locations_count,omitempty"`
	// List of Medical Subject Headings (MeSH) associated with the work, if applicable. MeSH terms are used to index and categorize biomedical literature.
	Mesh []ListWorks200ResponseResultsInnerMeshInner `json:"mesh,omitempty"`
	// URL to retrieve n-grams for this work.
	NgramsUrl *string `json:"ngrams_url,omitempty"`
	OpenAccess *ListWorks200ResponseResultsInnerOpenAccess `json:"open_access,omitempty"`
	PrimaryLocation *ListWorks200ResponseResultsInnerPrimaryLocation `json:"primary_location,omitempty"`
	PrimaryTopic *ListWorks200ResponseResultsInnerPrimaryTopic `json:"primary_topic,omitempty"`
	// The day when this work was published, formatted as an ISO 8601 date.
	PublicationDate *string `json:"publication_date,omitempty" validate:"regexp=^\\\\d{4}-\\\\d{2}-\\\\d{2}$"`
	// The year this work was published.
	PublicationYear *int32 `json:"publication_year,omitempty"`
	// OpenAlex IDs for works that this work cites.
	ReferencedWorks []string `json:"referenced_works,omitempty"`
	// OpenAlex IDs for works related to this work. These are computed algorithmically based on shared concepts.
	RelatedWorks []string `json:"related_works,omitempty"`
	// The UN Sustainable Development Goals relevant to this work.
	SustainableDevelopmentGoals []ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner `json:"sustainable_development_goals,omitempty"`
	// The title of this work.
	Title *string `json:"title,omitempty"`
	// The top ranked Topics for this work.
	Topics []ListWorks200ResponseResultsInnerTopicsInner `json:"topics,omitempty"`
	// The type of the work.
	Type *string `json:"type,omitempty"`
	// Legacy type information, using Crossref's \"type\" controlled vocabulary.
	TypeCrossref *string `json:"type_crossref,omitempty"`
	// The last time anything in this work object changed. Formatted as ISO 8601 extended format without time zone designator.
	UpdatedDate *string `json:"updated_date,omitempty"`
}

// NewListWorks200ResponseResultsInner instantiates a new ListWorks200ResponseResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWorks200ResponseResultsInner() *ListWorks200ResponseResultsInner {
	this := ListWorks200ResponseResultsInner{}
	return &this
}

// NewListWorks200ResponseResultsInnerWithDefaults instantiates a new ListWorks200ResponseResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWorks200ResponseResultsInnerWithDefaults() *ListWorks200ResponseResultsInner {
	this := ListWorks200ResponseResultsInner{}
	return &this
}

// GetAbstractInvertedIndex returns the AbstractInvertedIndex field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetAbstractInvertedIndex() map[string]interface{} {
	if o == nil || IsNil(o.AbstractInvertedIndex) {
		var ret map[string]interface{}
		return ret
	}
	return o.AbstractInvertedIndex
}

// GetAbstractInvertedIndexOk returns a tuple with the AbstractInvertedIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetAbstractInvertedIndexOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AbstractInvertedIndex) {
		return map[string]interface{}{}, false
	}
	return o.AbstractInvertedIndex, true
}

// HasAbstractInvertedIndex returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasAbstractInvertedIndex() bool {
	if o != nil && !IsNil(o.AbstractInvertedIndex) {
		return true
	}

	return false
}

// SetAbstractInvertedIndex gets a reference to the given map[string]interface{} and assigns it to the AbstractInvertedIndex field.
func (o *ListWorks200ResponseResultsInner) SetAbstractInvertedIndex(v map[string]interface{}) {
	o.AbstractInvertedIndex = v
}

// GetApcList returns the ApcList field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetApcList() ListWorks200ResponseResultsInnerApcList {
	if o == nil || IsNil(o.ApcList) {
		var ret ListWorks200ResponseResultsInnerApcList
		return ret
	}
	return *o.ApcList
}

// GetApcListOk returns a tuple with the ApcList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetApcListOk() (*ListWorks200ResponseResultsInnerApcList, bool) {
	if o == nil || IsNil(o.ApcList) {
		return nil, false
	}
	return o.ApcList, true
}

// HasApcList returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasApcList() bool {
	if o != nil && !IsNil(o.ApcList) {
		return true
	}

	return false
}

// SetApcList gets a reference to the given ListWorks200ResponseResultsInnerApcList and assigns it to the ApcList field.
func (o *ListWorks200ResponseResultsInner) SetApcList(v ListWorks200ResponseResultsInnerApcList) {
	o.ApcList = &v
}

// GetApcPaid returns the ApcPaid field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetApcPaid() ListWorks200ResponseResultsInnerApcPaid {
	if o == nil || IsNil(o.ApcPaid) {
		var ret ListWorks200ResponseResultsInnerApcPaid
		return ret
	}
	return *o.ApcPaid
}

// GetApcPaidOk returns a tuple with the ApcPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetApcPaidOk() (*ListWorks200ResponseResultsInnerApcPaid, bool) {
	if o == nil || IsNil(o.ApcPaid) {
		return nil, false
	}
	return o.ApcPaid, true
}

// HasApcPaid returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasApcPaid() bool {
	if o != nil && !IsNil(o.ApcPaid) {
		return true
	}

	return false
}

// SetApcPaid gets a reference to the given ListWorks200ResponseResultsInnerApcPaid and assigns it to the ApcPaid field.
func (o *ListWorks200ResponseResultsInner) SetApcPaid(v ListWorks200ResponseResultsInnerApcPaid) {
	o.ApcPaid = &v
}

// GetAuthorships returns the Authorships field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetAuthorships() []ListWorks200ResponseResultsInnerAuthorshipsInner {
	if o == nil || IsNil(o.Authorships) {
		var ret []ListWorks200ResponseResultsInnerAuthorshipsInner
		return ret
	}
	return o.Authorships
}

// GetAuthorshipsOk returns a tuple with the Authorships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetAuthorshipsOk() ([]ListWorks200ResponseResultsInnerAuthorshipsInner, bool) {
	if o == nil || IsNil(o.Authorships) {
		return nil, false
	}
	return o.Authorships, true
}

// HasAuthorships returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasAuthorships() bool {
	if o != nil && !IsNil(o.Authorships) {
		return true
	}

	return false
}

// SetAuthorships gets a reference to the given []ListWorks200ResponseResultsInnerAuthorshipsInner and assigns it to the Authorships field.
func (o *ListWorks200ResponseResultsInner) SetAuthorships(v []ListWorks200ResponseResultsInnerAuthorshipsInner) {
	o.Authorships = v
}

// GetBestOaLocation returns the BestOaLocation field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetBestOaLocation() ListWorks200ResponseResultsInnerBestOaLocation {
	if o == nil || IsNil(o.BestOaLocation) {
		var ret ListWorks200ResponseResultsInnerBestOaLocation
		return ret
	}
	return *o.BestOaLocation
}

// GetBestOaLocationOk returns a tuple with the BestOaLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetBestOaLocationOk() (*ListWorks200ResponseResultsInnerBestOaLocation, bool) {
	if o == nil || IsNil(o.BestOaLocation) {
		return nil, false
	}
	return o.BestOaLocation, true
}

// HasBestOaLocation returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasBestOaLocation() bool {
	if o != nil && !IsNil(o.BestOaLocation) {
		return true
	}

	return false
}

// SetBestOaLocation gets a reference to the given ListWorks200ResponseResultsInnerBestOaLocation and assigns it to the BestOaLocation field.
func (o *ListWorks200ResponseResultsInner) SetBestOaLocation(v ListWorks200ResponseResultsInnerBestOaLocation) {
	o.BestOaLocation = &v
}

// GetBiblio returns the Biblio field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetBiblio() ListWorks200ResponseResultsInnerBiblio {
	if o == nil || IsNil(o.Biblio) {
		var ret ListWorks200ResponseResultsInnerBiblio
		return ret
	}
	return *o.Biblio
}

// GetBiblioOk returns a tuple with the Biblio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetBiblioOk() (*ListWorks200ResponseResultsInnerBiblio, bool) {
	if o == nil || IsNil(o.Biblio) {
		return nil, false
	}
	return o.Biblio, true
}

// HasBiblio returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasBiblio() bool {
	if o != nil && !IsNil(o.Biblio) {
		return true
	}

	return false
}

// SetBiblio gets a reference to the given ListWorks200ResponseResultsInnerBiblio and assigns it to the Biblio field.
func (o *ListWorks200ResponseResultsInner) SetBiblio(v ListWorks200ResponseResultsInnerBiblio) {
	o.Biblio = &v
}

// GetCitedByApiUrl returns the CitedByApiUrl field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCitedByApiUrl() string {
	if o == nil || IsNil(o.CitedByApiUrl) {
		var ret string
		return ret
	}
	return *o.CitedByApiUrl
}

// GetCitedByApiUrlOk returns a tuple with the CitedByApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCitedByApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CitedByApiUrl) {
		return nil, false
	}
	return o.CitedByApiUrl, true
}

// HasCitedByApiUrl returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCitedByApiUrl() bool {
	if o != nil && !IsNil(o.CitedByApiUrl) {
		return true
	}

	return false
}

// SetCitedByApiUrl gets a reference to the given string and assigns it to the CitedByApiUrl field.
func (o *ListWorks200ResponseResultsInner) SetCitedByApiUrl(v string) {
	o.CitedByApiUrl = &v
}

// GetCitedByCount returns the CitedByCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCitedByCount() int32 {
	if o == nil || IsNil(o.CitedByCount) {
		var ret int32
		return ret
	}
	return *o.CitedByCount
}

// GetCitedByCountOk returns a tuple with the CitedByCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCitedByCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CitedByCount) {
		return nil, false
	}
	return o.CitedByCount, true
}

// HasCitedByCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCitedByCount() bool {
	if o != nil && !IsNil(o.CitedByCount) {
		return true
	}

	return false
}

// SetCitedByCount gets a reference to the given int32 and assigns it to the CitedByCount field.
func (o *ListWorks200ResponseResultsInner) SetCitedByCount(v int32) {
	o.CitedByCount = &v
}

// GetConcepts returns the Concepts field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetConcepts() []map[string]interface{} {
	if o == nil || IsNil(o.Concepts) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Concepts
}

// GetConceptsOk returns a tuple with the Concepts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetConceptsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Concepts) {
		return nil, false
	}
	return o.Concepts, true
}

// HasConcepts returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasConcepts() bool {
	if o != nil && !IsNil(o.Concepts) {
		return true
	}

	return false
}

// SetConcepts gets a reference to the given []map[string]interface{} and assigns it to the Concepts field.
func (o *ListWorks200ResponseResultsInner) SetConcepts(v []map[string]interface{}) {
	o.Concepts = v
}

// GetCorrespondingAuthorIds returns the CorrespondingAuthorIds field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCorrespondingAuthorIds() []string {
	if o == nil || IsNil(o.CorrespondingAuthorIds) {
		var ret []string
		return ret
	}
	return o.CorrespondingAuthorIds
}

// GetCorrespondingAuthorIdsOk returns a tuple with the CorrespondingAuthorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCorrespondingAuthorIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CorrespondingAuthorIds) {
		return nil, false
	}
	return o.CorrespondingAuthorIds, true
}

// HasCorrespondingAuthorIds returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCorrespondingAuthorIds() bool {
	if o != nil && !IsNil(o.CorrespondingAuthorIds) {
		return true
	}

	return false
}

// SetCorrespondingAuthorIds gets a reference to the given []string and assigns it to the CorrespondingAuthorIds field.
func (o *ListWorks200ResponseResultsInner) SetCorrespondingAuthorIds(v []string) {
	o.CorrespondingAuthorIds = v
}

// GetCorrespondingInstitutionIds returns the CorrespondingInstitutionIds field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCorrespondingInstitutionIds() []string {
	if o == nil || IsNil(o.CorrespondingInstitutionIds) {
		var ret []string
		return ret
	}
	return o.CorrespondingInstitutionIds
}

// GetCorrespondingInstitutionIdsOk returns a tuple with the CorrespondingInstitutionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCorrespondingInstitutionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CorrespondingInstitutionIds) {
		return nil, false
	}
	return o.CorrespondingInstitutionIds, true
}

// HasCorrespondingInstitutionIds returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCorrespondingInstitutionIds() bool {
	if o != nil && !IsNil(o.CorrespondingInstitutionIds) {
		return true
	}

	return false
}

// SetCorrespondingInstitutionIds gets a reference to the given []string and assigns it to the CorrespondingInstitutionIds field.
func (o *ListWorks200ResponseResultsInner) SetCorrespondingInstitutionIds(v []string) {
	o.CorrespondingInstitutionIds = v
}

// GetCountriesDistinctCount returns the CountriesDistinctCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCountriesDistinctCount() int32 {
	if o == nil || IsNil(o.CountriesDistinctCount) {
		var ret int32
		return ret
	}
	return *o.CountriesDistinctCount
}

// GetCountriesDistinctCountOk returns a tuple with the CountriesDistinctCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCountriesDistinctCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CountriesDistinctCount) {
		return nil, false
	}
	return o.CountriesDistinctCount, true
}

// HasCountriesDistinctCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCountriesDistinctCount() bool {
	if o != nil && !IsNil(o.CountriesDistinctCount) {
		return true
	}

	return false
}

// SetCountriesDistinctCount gets a reference to the given int32 and assigns it to the CountriesDistinctCount field.
func (o *ListWorks200ResponseResultsInner) SetCountriesDistinctCount(v int32) {
	o.CountriesDistinctCount = &v
}

// GetCountsByYear returns the CountsByYear field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCountsByYear() []ListWorks200ResponseResultsInnerCountsByYearInner {
	if o == nil || IsNil(o.CountsByYear) {
		var ret []ListWorks200ResponseResultsInnerCountsByYearInner
		return ret
	}
	return o.CountsByYear
}

// GetCountsByYearOk returns a tuple with the CountsByYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCountsByYearOk() ([]ListWorks200ResponseResultsInnerCountsByYearInner, bool) {
	if o == nil || IsNil(o.CountsByYear) {
		return nil, false
	}
	return o.CountsByYear, true
}

// HasCountsByYear returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCountsByYear() bool {
	if o != nil && !IsNil(o.CountsByYear) {
		return true
	}

	return false
}

// SetCountsByYear gets a reference to the given []ListWorks200ResponseResultsInnerCountsByYearInner and assigns it to the CountsByYear field.
func (o *ListWorks200ResponseResultsInner) SetCountsByYear(v []ListWorks200ResponseResultsInnerCountsByYearInner) {
	o.CountsByYear = v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *ListWorks200ResponseResultsInner) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ListWorks200ResponseResultsInner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDoi returns the Doi field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetDoi() string {
	if o == nil || IsNil(o.Doi) {
		var ret string
		return ret
	}
	return *o.Doi
}

// GetDoiOk returns a tuple with the Doi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetDoiOk() (*string, bool) {
	if o == nil || IsNil(o.Doi) {
		return nil, false
	}
	return o.Doi, true
}

// HasDoi returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasDoi() bool {
	if o != nil && !IsNil(o.Doi) {
		return true
	}

	return false
}

// SetDoi gets a reference to the given string and assigns it to the Doi field.
func (o *ListWorks200ResponseResultsInner) SetDoi(v string) {
	o.Doi = &v
}

// GetFulltextOrigin returns the FulltextOrigin field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetFulltextOrigin() string {
	if o == nil || IsNil(o.FulltextOrigin) {
		var ret string
		return ret
	}
	return *o.FulltextOrigin
}

// GetFulltextOriginOk returns a tuple with the FulltextOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetFulltextOriginOk() (*string, bool) {
	if o == nil || IsNil(o.FulltextOrigin) {
		return nil, false
	}
	return o.FulltextOrigin, true
}

// HasFulltextOrigin returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasFulltextOrigin() bool {
	if o != nil && !IsNil(o.FulltextOrigin) {
		return true
	}

	return false
}

// SetFulltextOrigin gets a reference to the given string and assigns it to the FulltextOrigin field.
func (o *ListWorks200ResponseResultsInner) SetFulltextOrigin(v string) {
	o.FulltextOrigin = &v
}

// GetGrants returns the Grants field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetGrants() []ListWorks200ResponseResultsInnerGrantsInner {
	if o == nil || IsNil(o.Grants) {
		var ret []ListWorks200ResponseResultsInnerGrantsInner
		return ret
	}
	return o.Grants
}

// GetGrantsOk returns a tuple with the Grants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetGrantsOk() ([]ListWorks200ResponseResultsInnerGrantsInner, bool) {
	if o == nil || IsNil(o.Grants) {
		return nil, false
	}
	return o.Grants, true
}

// HasGrants returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasGrants() bool {
	if o != nil && !IsNil(o.Grants) {
		return true
	}

	return false
}

// SetGrants gets a reference to the given []ListWorks200ResponseResultsInnerGrantsInner and assigns it to the Grants field.
func (o *ListWorks200ResponseResultsInner) SetGrants(v []ListWorks200ResponseResultsInnerGrantsInner) {
	o.Grants = v
}

// GetHasFulltext returns the HasFulltext field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetHasFulltext() bool {
	if o == nil || IsNil(o.HasFulltext) {
		var ret bool
		return ret
	}
	return *o.HasFulltext
}

// GetHasFulltextOk returns a tuple with the HasFulltext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetHasFulltextOk() (*bool, bool) {
	if o == nil || IsNil(o.HasFulltext) {
		return nil, false
	}
	return o.HasFulltext, true
}

// HasHasFulltext returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasHasFulltext() bool {
	if o != nil && !IsNil(o.HasFulltext) {
		return true
	}

	return false
}

// SetHasFulltext gets a reference to the given bool and assigns it to the HasFulltext field.
func (o *ListWorks200ResponseResultsInner) SetHasFulltext(v bool) {
	o.HasFulltext = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListWorks200ResponseResultsInner) SetId(v string) {
	o.Id = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetIds() ListWorks200ResponseResultsInnerIds {
	if o == nil || IsNil(o.Ids) {
		var ret ListWorks200ResponseResultsInnerIds
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetIdsOk() (*ListWorks200ResponseResultsInnerIds, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given ListWorks200ResponseResultsInnerIds and assigns it to the Ids field.
func (o *ListWorks200ResponseResultsInner) SetIds(v ListWorks200ResponseResultsInnerIds) {
	o.Ids = &v
}

// GetIndexedIn returns the IndexedIn field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetIndexedIn() []string {
	if o == nil || IsNil(o.IndexedIn) {
		var ret []string
		return ret
	}
	return o.IndexedIn
}

// GetIndexedInOk returns a tuple with the IndexedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetIndexedInOk() ([]string, bool) {
	if o == nil || IsNil(o.IndexedIn) {
		return nil, false
	}
	return o.IndexedIn, true
}

// HasIndexedIn returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasIndexedIn() bool {
	if o != nil && !IsNil(o.IndexedIn) {
		return true
	}

	return false
}

// SetIndexedIn gets a reference to the given []string and assigns it to the IndexedIn field.
func (o *ListWorks200ResponseResultsInner) SetIndexedIn(v []string) {
	o.IndexedIn = v
}

// GetInstitutionsDistinctCount returns the InstitutionsDistinctCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetInstitutionsDistinctCount() int32 {
	if o == nil || IsNil(o.InstitutionsDistinctCount) {
		var ret int32
		return ret
	}
	return *o.InstitutionsDistinctCount
}

// GetInstitutionsDistinctCountOk returns a tuple with the InstitutionsDistinctCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetInstitutionsDistinctCountOk() (*int32, bool) {
	if o == nil || IsNil(o.InstitutionsDistinctCount) {
		return nil, false
	}
	return o.InstitutionsDistinctCount, true
}

// HasInstitutionsDistinctCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasInstitutionsDistinctCount() bool {
	if o != nil && !IsNil(o.InstitutionsDistinctCount) {
		return true
	}

	return false
}

// SetInstitutionsDistinctCount gets a reference to the given int32 and assigns it to the InstitutionsDistinctCount field.
func (o *ListWorks200ResponseResultsInner) SetInstitutionsDistinctCount(v int32) {
	o.InstitutionsDistinctCount = &v
}

// GetIsParatext returns the IsParatext field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetIsParatext() bool {
	if o == nil || IsNil(o.IsParatext) {
		var ret bool
		return ret
	}
	return *o.IsParatext
}

// GetIsParatextOk returns a tuple with the IsParatext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetIsParatextOk() (*bool, bool) {
	if o == nil || IsNil(o.IsParatext) {
		return nil, false
	}
	return o.IsParatext, true
}

// HasIsParatext returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasIsParatext() bool {
	if o != nil && !IsNil(o.IsParatext) {
		return true
	}

	return false
}

// SetIsParatext gets a reference to the given bool and assigns it to the IsParatext field.
func (o *ListWorks200ResponseResultsInner) SetIsParatext(v bool) {
	o.IsParatext = &v
}

// GetIsRetracted returns the IsRetracted field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetIsRetracted() bool {
	if o == nil || IsNil(o.IsRetracted) {
		var ret bool
		return ret
	}
	return *o.IsRetracted
}

// GetIsRetractedOk returns a tuple with the IsRetracted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetIsRetractedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRetracted) {
		return nil, false
	}
	return o.IsRetracted, true
}

// HasIsRetracted returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasIsRetracted() bool {
	if o != nil && !IsNil(o.IsRetracted) {
		return true
	}

	return false
}

// SetIsRetracted gets a reference to the given bool and assigns it to the IsRetracted field.
func (o *ListWorks200ResponseResultsInner) SetIsRetracted(v bool) {
	o.IsRetracted = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetKeywords() []ListKeywords200ResponseResultsInner {
	if o == nil || IsNil(o.Keywords) {
		var ret []ListKeywords200ResponseResultsInner
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetKeywordsOk() ([]ListKeywords200ResponseResultsInner, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []ListKeywords200ResponseResultsInner and assigns it to the Keywords field.
func (o *ListWorks200ResponseResultsInner) SetKeywords(v []ListKeywords200ResponseResultsInner) {
	o.Keywords = v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *ListWorks200ResponseResultsInner) SetLanguage(v string) {
	o.Language = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetLicense() string {
	if o == nil || IsNil(o.License) {
		var ret string
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetLicenseOk() (*string, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given string and assigns it to the License field.
func (o *ListWorks200ResponseResultsInner) SetLicense(v string) {
	o.License = &v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetLocations() []ListWorks200ResponseResultsInnerLocationsInner {
	if o == nil || IsNil(o.Locations) {
		var ret []ListWorks200ResponseResultsInnerLocationsInner
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetLocationsOk() ([]ListWorks200ResponseResultsInnerLocationsInner, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []ListWorks200ResponseResultsInnerLocationsInner and assigns it to the Locations field.
func (o *ListWorks200ResponseResultsInner) SetLocations(v []ListWorks200ResponseResultsInnerLocationsInner) {
	o.Locations = v
}

// GetLocationsCount returns the LocationsCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetLocationsCount() int32 {
	if o == nil || IsNil(o.LocationsCount) {
		var ret int32
		return ret
	}
	return *o.LocationsCount
}

// GetLocationsCountOk returns a tuple with the LocationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetLocationsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.LocationsCount) {
		return nil, false
	}
	return o.LocationsCount, true
}

// HasLocationsCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasLocationsCount() bool {
	if o != nil && !IsNil(o.LocationsCount) {
		return true
	}

	return false
}

// SetLocationsCount gets a reference to the given int32 and assigns it to the LocationsCount field.
func (o *ListWorks200ResponseResultsInner) SetLocationsCount(v int32) {
	o.LocationsCount = &v
}

// GetMesh returns the Mesh field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetMesh() []ListWorks200ResponseResultsInnerMeshInner {
	if o == nil || IsNil(o.Mesh) {
		var ret []ListWorks200ResponseResultsInnerMeshInner
		return ret
	}
	return o.Mesh
}

// GetMeshOk returns a tuple with the Mesh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetMeshOk() ([]ListWorks200ResponseResultsInnerMeshInner, bool) {
	if o == nil || IsNil(o.Mesh) {
		return nil, false
	}
	return o.Mesh, true
}

// HasMesh returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasMesh() bool {
	if o != nil && !IsNil(o.Mesh) {
		return true
	}

	return false
}

// SetMesh gets a reference to the given []ListWorks200ResponseResultsInnerMeshInner and assigns it to the Mesh field.
func (o *ListWorks200ResponseResultsInner) SetMesh(v []ListWorks200ResponseResultsInnerMeshInner) {
	o.Mesh = v
}

// GetNgramsUrl returns the NgramsUrl field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetNgramsUrl() string {
	if o == nil || IsNil(o.NgramsUrl) {
		var ret string
		return ret
	}
	return *o.NgramsUrl
}

// GetNgramsUrlOk returns a tuple with the NgramsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetNgramsUrlOk() (*string, bool) {
	if o == nil || IsNil(o.NgramsUrl) {
		return nil, false
	}
	return o.NgramsUrl, true
}

// HasNgramsUrl returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasNgramsUrl() bool {
	if o != nil && !IsNil(o.NgramsUrl) {
		return true
	}

	return false
}

// SetNgramsUrl gets a reference to the given string and assigns it to the NgramsUrl field.
func (o *ListWorks200ResponseResultsInner) SetNgramsUrl(v string) {
	o.NgramsUrl = &v
}

// GetOpenAccess returns the OpenAccess field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetOpenAccess() ListWorks200ResponseResultsInnerOpenAccess {
	if o == nil || IsNil(o.OpenAccess) {
		var ret ListWorks200ResponseResultsInnerOpenAccess
		return ret
	}
	return *o.OpenAccess
}

// GetOpenAccessOk returns a tuple with the OpenAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetOpenAccessOk() (*ListWorks200ResponseResultsInnerOpenAccess, bool) {
	if o == nil || IsNil(o.OpenAccess) {
		return nil, false
	}
	return o.OpenAccess, true
}

// HasOpenAccess returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasOpenAccess() bool {
	if o != nil && !IsNil(o.OpenAccess) {
		return true
	}

	return false
}

// SetOpenAccess gets a reference to the given ListWorks200ResponseResultsInnerOpenAccess and assigns it to the OpenAccess field.
func (o *ListWorks200ResponseResultsInner) SetOpenAccess(v ListWorks200ResponseResultsInnerOpenAccess) {
	o.OpenAccess = &v
}

// GetPrimaryLocation returns the PrimaryLocation field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetPrimaryLocation() ListWorks200ResponseResultsInnerPrimaryLocation {
	if o == nil || IsNil(o.PrimaryLocation) {
		var ret ListWorks200ResponseResultsInnerPrimaryLocation
		return ret
	}
	return *o.PrimaryLocation
}

// GetPrimaryLocationOk returns a tuple with the PrimaryLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetPrimaryLocationOk() (*ListWorks200ResponseResultsInnerPrimaryLocation, bool) {
	if o == nil || IsNil(o.PrimaryLocation) {
		return nil, false
	}
	return o.PrimaryLocation, true
}

// HasPrimaryLocation returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasPrimaryLocation() bool {
	if o != nil && !IsNil(o.PrimaryLocation) {
		return true
	}

	return false
}

// SetPrimaryLocation gets a reference to the given ListWorks200ResponseResultsInnerPrimaryLocation and assigns it to the PrimaryLocation field.
func (o *ListWorks200ResponseResultsInner) SetPrimaryLocation(v ListWorks200ResponseResultsInnerPrimaryLocation) {
	o.PrimaryLocation = &v
}

// GetPrimaryTopic returns the PrimaryTopic field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetPrimaryTopic() ListWorks200ResponseResultsInnerPrimaryTopic {
	if o == nil || IsNil(o.PrimaryTopic) {
		var ret ListWorks200ResponseResultsInnerPrimaryTopic
		return ret
	}
	return *o.PrimaryTopic
}

// GetPrimaryTopicOk returns a tuple with the PrimaryTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetPrimaryTopicOk() (*ListWorks200ResponseResultsInnerPrimaryTopic, bool) {
	if o == nil || IsNil(o.PrimaryTopic) {
		return nil, false
	}
	return o.PrimaryTopic, true
}

// HasPrimaryTopic returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasPrimaryTopic() bool {
	if o != nil && !IsNil(o.PrimaryTopic) {
		return true
	}

	return false
}

// SetPrimaryTopic gets a reference to the given ListWorks200ResponseResultsInnerPrimaryTopic and assigns it to the PrimaryTopic field.
func (o *ListWorks200ResponseResultsInner) SetPrimaryTopic(v ListWorks200ResponseResultsInnerPrimaryTopic) {
	o.PrimaryTopic = &v
}

// GetPublicationDate returns the PublicationDate field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetPublicationDate() string {
	if o == nil || IsNil(o.PublicationDate) {
		var ret string
		return ret
	}
	return *o.PublicationDate
}

// GetPublicationDateOk returns a tuple with the PublicationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetPublicationDateOk() (*string, bool) {
	if o == nil || IsNil(o.PublicationDate) {
		return nil, false
	}
	return o.PublicationDate, true
}

// HasPublicationDate returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasPublicationDate() bool {
	if o != nil && !IsNil(o.PublicationDate) {
		return true
	}

	return false
}

// SetPublicationDate gets a reference to the given string and assigns it to the PublicationDate field.
func (o *ListWorks200ResponseResultsInner) SetPublicationDate(v string) {
	o.PublicationDate = &v
}

// GetPublicationYear returns the PublicationYear field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetPublicationYear() int32 {
	if o == nil || IsNil(o.PublicationYear) {
		var ret int32
		return ret
	}
	return *o.PublicationYear
}

// GetPublicationYearOk returns a tuple with the PublicationYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetPublicationYearOk() (*int32, bool) {
	if o == nil || IsNil(o.PublicationYear) {
		return nil, false
	}
	return o.PublicationYear, true
}

// HasPublicationYear returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasPublicationYear() bool {
	if o != nil && !IsNil(o.PublicationYear) {
		return true
	}

	return false
}

// SetPublicationYear gets a reference to the given int32 and assigns it to the PublicationYear field.
func (o *ListWorks200ResponseResultsInner) SetPublicationYear(v int32) {
	o.PublicationYear = &v
}

// GetReferencedWorks returns the ReferencedWorks field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetReferencedWorks() []string {
	if o == nil || IsNil(o.ReferencedWorks) {
		var ret []string
		return ret
	}
	return o.ReferencedWorks
}

// GetReferencedWorksOk returns a tuple with the ReferencedWorks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetReferencedWorksOk() ([]string, bool) {
	if o == nil || IsNil(o.ReferencedWorks) {
		return nil, false
	}
	return o.ReferencedWorks, true
}

// HasReferencedWorks returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasReferencedWorks() bool {
	if o != nil && !IsNil(o.ReferencedWorks) {
		return true
	}

	return false
}

// SetReferencedWorks gets a reference to the given []string and assigns it to the ReferencedWorks field.
func (o *ListWorks200ResponseResultsInner) SetReferencedWorks(v []string) {
	o.ReferencedWorks = v
}

// GetRelatedWorks returns the RelatedWorks field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetRelatedWorks() []string {
	if o == nil || IsNil(o.RelatedWorks) {
		var ret []string
		return ret
	}
	return o.RelatedWorks
}

// GetRelatedWorksOk returns a tuple with the RelatedWorks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetRelatedWorksOk() ([]string, bool) {
	if o == nil || IsNil(o.RelatedWorks) {
		return nil, false
	}
	return o.RelatedWorks, true
}

// HasRelatedWorks returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasRelatedWorks() bool {
	if o != nil && !IsNil(o.RelatedWorks) {
		return true
	}

	return false
}

// SetRelatedWorks gets a reference to the given []string and assigns it to the RelatedWorks field.
func (o *ListWorks200ResponseResultsInner) SetRelatedWorks(v []string) {
	o.RelatedWorks = v
}

// GetSustainableDevelopmentGoals returns the SustainableDevelopmentGoals field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetSustainableDevelopmentGoals() []ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner {
	if o == nil || IsNil(o.SustainableDevelopmentGoals) {
		var ret []ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner
		return ret
	}
	return o.SustainableDevelopmentGoals
}

// GetSustainableDevelopmentGoalsOk returns a tuple with the SustainableDevelopmentGoals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetSustainableDevelopmentGoalsOk() ([]ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner, bool) {
	if o == nil || IsNil(o.SustainableDevelopmentGoals) {
		return nil, false
	}
	return o.SustainableDevelopmentGoals, true
}

// HasSustainableDevelopmentGoals returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasSustainableDevelopmentGoals() bool {
	if o != nil && !IsNil(o.SustainableDevelopmentGoals) {
		return true
	}

	return false
}

// SetSustainableDevelopmentGoals gets a reference to the given []ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner and assigns it to the SustainableDevelopmentGoals field.
func (o *ListWorks200ResponseResultsInner) SetSustainableDevelopmentGoals(v []ListWorks200ResponseResultsInnerSustainableDevelopmentGoalsInner) {
	o.SustainableDevelopmentGoals = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ListWorks200ResponseResultsInner) SetTitle(v string) {
	o.Title = &v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetTopics() []ListWorks200ResponseResultsInnerTopicsInner {
	if o == nil || IsNil(o.Topics) {
		var ret []ListWorks200ResponseResultsInnerTopicsInner
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetTopicsOk() ([]ListWorks200ResponseResultsInnerTopicsInner, bool) {
	if o == nil || IsNil(o.Topics) {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasTopics() bool {
	if o != nil && !IsNil(o.Topics) {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []ListWorks200ResponseResultsInnerTopicsInner and assigns it to the Topics field.
func (o *ListWorks200ResponseResultsInner) SetTopics(v []ListWorks200ResponseResultsInnerTopicsInner) {
	o.Topics = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ListWorks200ResponseResultsInner) SetType(v string) {
	o.Type = &v
}

// GetTypeCrossref returns the TypeCrossref field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetTypeCrossref() string {
	if o == nil || IsNil(o.TypeCrossref) {
		var ret string
		return ret
	}
	return *o.TypeCrossref
}

// GetTypeCrossrefOk returns a tuple with the TypeCrossref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetTypeCrossrefOk() (*string, bool) {
	if o == nil || IsNil(o.TypeCrossref) {
		return nil, false
	}
	return o.TypeCrossref, true
}

// HasTypeCrossref returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasTypeCrossref() bool {
	if o != nil && !IsNil(o.TypeCrossref) {
		return true
	}

	return false
}

// SetTypeCrossref gets a reference to the given string and assigns it to the TypeCrossref field.
func (o *ListWorks200ResponseResultsInner) SetTypeCrossref(v string) {
	o.TypeCrossref = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInner) GetUpdatedDate() string {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret string
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInner) GetUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInner) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given string and assigns it to the UpdatedDate field.
func (o *ListWorks200ResponseResultsInner) SetUpdatedDate(v string) {
	o.UpdatedDate = &v
}

func (o ListWorks200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWorks200ResponseResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AbstractInvertedIndex) {
		toSerialize["abstract_inverted_index"] = o.AbstractInvertedIndex
	}
	if !IsNil(o.ApcList) {
		toSerialize["apc_list"] = o.ApcList
	}
	if !IsNil(o.ApcPaid) {
		toSerialize["apc_paid"] = o.ApcPaid
	}
	if !IsNil(o.Authorships) {
		toSerialize["authorships"] = o.Authorships
	}
	if !IsNil(o.BestOaLocation) {
		toSerialize["best_oa_location"] = o.BestOaLocation
	}
	if !IsNil(o.Biblio) {
		toSerialize["biblio"] = o.Biblio
	}
	if !IsNil(o.CitedByApiUrl) {
		toSerialize["cited_by_api_url"] = o.CitedByApiUrl
	}
	if !IsNil(o.CitedByCount) {
		toSerialize["cited_by_count"] = o.CitedByCount
	}
	if !IsNil(o.Concepts) {
		toSerialize["concepts"] = o.Concepts
	}
	if !IsNil(o.CorrespondingAuthorIds) {
		toSerialize["corresponding_author_ids"] = o.CorrespondingAuthorIds
	}
	if !IsNil(o.CorrespondingInstitutionIds) {
		toSerialize["corresponding_institution_ids"] = o.CorrespondingInstitutionIds
	}
	if !IsNil(o.CountriesDistinctCount) {
		toSerialize["countries_distinct_count"] = o.CountriesDistinctCount
	}
	if !IsNil(o.CountsByYear) {
		toSerialize["counts_by_year"] = o.CountsByYear
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Doi) {
		toSerialize["doi"] = o.Doi
	}
	if !IsNil(o.FulltextOrigin) {
		toSerialize["fulltext_origin"] = o.FulltextOrigin
	}
	if !IsNil(o.Grants) {
		toSerialize["grants"] = o.Grants
	}
	if !IsNil(o.HasFulltext) {
		toSerialize["has_fulltext"] = o.HasFulltext
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.IndexedIn) {
		toSerialize["indexed_in"] = o.IndexedIn
	}
	if !IsNil(o.InstitutionsDistinctCount) {
		toSerialize["institutions_distinct_count"] = o.InstitutionsDistinctCount
	}
	if !IsNil(o.IsParatext) {
		toSerialize["is_paratext"] = o.IsParatext
	}
	if !IsNil(o.IsRetracted) {
		toSerialize["is_retracted"] = o.IsRetracted
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	if !IsNil(o.LocationsCount) {
		toSerialize["locations_count"] = o.LocationsCount
	}
	if !IsNil(o.Mesh) {
		toSerialize["mesh"] = o.Mesh
	}
	if !IsNil(o.NgramsUrl) {
		toSerialize["ngrams_url"] = o.NgramsUrl
	}
	if !IsNil(o.OpenAccess) {
		toSerialize["open_access"] = o.OpenAccess
	}
	if !IsNil(o.PrimaryLocation) {
		toSerialize["primary_location"] = o.PrimaryLocation
	}
	if !IsNil(o.PrimaryTopic) {
		toSerialize["primary_topic"] = o.PrimaryTopic
	}
	if !IsNil(o.PublicationDate) {
		toSerialize["publication_date"] = o.PublicationDate
	}
	if !IsNil(o.PublicationYear) {
		toSerialize["publication_year"] = o.PublicationYear
	}
	if !IsNil(o.ReferencedWorks) {
		toSerialize["referenced_works"] = o.ReferencedWorks
	}
	if !IsNil(o.RelatedWorks) {
		toSerialize["related_works"] = o.RelatedWorks
	}
	if !IsNil(o.SustainableDevelopmentGoals) {
		toSerialize["sustainable_development_goals"] = o.SustainableDevelopmentGoals
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Topics) {
		toSerialize["topics"] = o.Topics
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.TypeCrossref) {
		toSerialize["type_crossref"] = o.TypeCrossref
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	return toSerialize, nil
}

type NullableListWorks200ResponseResultsInner struct {
	value *ListWorks200ResponseResultsInner
	isSet bool
}

func (v NullableListWorks200ResponseResultsInner) Get() *ListWorks200ResponseResultsInner {
	return v.value
}

func (v *NullableListWorks200ResponseResultsInner) Set(val *ListWorks200ResponseResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListWorks200ResponseResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListWorks200ResponseResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWorks200ResponseResultsInner(val *ListWorks200ResponseResultsInner) *NullableListWorks200ResponseResultsInner {
	return &NullableListWorks200ResponseResultsInner{value: val, isSet: true}
}

func (v NullableListWorks200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWorks200ResponseResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


