/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListInstitutions200ResponseResultsInnerInternational type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListInstitutions200ResponseResultsInnerInternational{}

// ListInstitutions200ResponseResultsInnerInternational The institution's display name in different languages.
type ListInstitutions200ResponseResultsInnerInternational struct {
	DisplayName map[string]string `json:"display_name,omitempty"`
}

// NewListInstitutions200ResponseResultsInnerInternational instantiates a new ListInstitutions200ResponseResultsInnerInternational object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInstitutions200ResponseResultsInnerInternational() *ListInstitutions200ResponseResultsInnerInternational {
	this := ListInstitutions200ResponseResultsInnerInternational{}
	return &this
}

// NewListInstitutions200ResponseResultsInnerInternationalWithDefaults instantiates a new ListInstitutions200ResponseResultsInnerInternational object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInstitutions200ResponseResultsInnerInternationalWithDefaults() *ListInstitutions200ResponseResultsInnerInternational {
	this := ListInstitutions200ResponseResultsInnerInternational{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ListInstitutions200ResponseResultsInnerInternational) GetDisplayName() map[string]string {
	if o == nil || IsNil(o.DisplayName) {
		var ret map[string]string
		return ret
	}
	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInstitutions200ResponseResultsInnerInternational) GetDisplayNameOk() (map[string]string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return map[string]string{}, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ListInstitutions200ResponseResultsInnerInternational) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given map[string]string and assigns it to the DisplayName field.
func (o *ListInstitutions200ResponseResultsInnerInternational) SetDisplayName(v map[string]string) {
	o.DisplayName = v
}

func (o ListInstitutions200ResponseResultsInnerInternational) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListInstitutions200ResponseResultsInnerInternational) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	return toSerialize, nil
}

type NullableListInstitutions200ResponseResultsInnerInternational struct {
	value *ListInstitutions200ResponseResultsInnerInternational
	isSet bool
}

func (v NullableListInstitutions200ResponseResultsInnerInternational) Get() *ListInstitutions200ResponseResultsInnerInternational {
	return v.value
}

func (v *NullableListInstitutions200ResponseResultsInnerInternational) Set(val *ListInstitutions200ResponseResultsInnerInternational) {
	v.value = val
	v.isSet = true
}

func (v NullableListInstitutions200ResponseResultsInnerInternational) IsSet() bool {
	return v.isSet
}

func (v *NullableListInstitutions200ResponseResultsInnerInternational) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInstitutions200ResponseResultsInnerInternational(val *ListInstitutions200ResponseResultsInnerInternational) *NullableListInstitutions200ResponseResultsInnerInternational {
	return &NullableListInstitutions200ResponseResultsInnerInternational{value: val, isSet: true}
}

func (v NullableListInstitutions200ResponseResultsInnerInternational) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInstitutions200ResponseResultsInnerInternational) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


