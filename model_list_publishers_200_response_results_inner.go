/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListPublishers200ResponseResultsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListPublishers200ResponseResultsInner{}

// ListPublishers200ResponseResultsInner struct for ListPublishers200ResponseResultsInner
type ListPublishers200ResponseResultsInner struct {
	// A list of alternate titles for this publisher.
	AlternateTitles []string `json:"alternate_titles,omitempty"`
	// The number of citations to works that are linked to this publisher through journals or other sources.
	CitedByCount *int32 `json:"cited_by_count,omitempty"`
	// The countries where the publisher is primarily located, as an ISO two-letter country code.
	CountryCodes []string `json:"country_codes,omitempty"`
	// The values of works_count and cited_by_count for each of the last ten years, binned by year.
	CountsByYear []ListAuthors200ResponseResultsInnerCountsByYearInner `json:"counts_by_year,omitempty"`
	// The date this Publisher object was created in the OpenAlex dataset, expressed as an ISO 8601 date string.
	CreatedDate *string `json:"created_date,omitempty"`
	// The primary name of the publisher.
	DisplayName *string `json:"display_name,omitempty"`
	// The hierarchy level for this publisher. A publisher with hierarchy level 0 has no parent publishers.
	HierarchyLevel *int32 `json:"hierarchy_level,omitempty"`
	// The OpenAlex ID for this publisher.
	Id *string `json:"id,omitempty"`
	Ids *ListPublishers200ResponseResultsInnerIds `json:"ids,omitempty"`
	// URL for a smaller version of the image representing this publisher.
	ImageThumbnailUrl *string `json:"image_thumbnail_url,omitempty"`
	// URL where you can get an image representing this publisher.
	ImageUrl *string `json:"image_url,omitempty"`
	// OpenAlex IDs of publishers, including this publisher's ID and any parent publishers.
	Lineage []string `json:"lineage,omitempty"`
	ParentPublisher NullableListPublishers200ResponseResultsInnerParentPublisher `json:"parent_publisher,omitempty"`
	// List of role objects, which include the role, the id, and the works_count.
	Roles []ListFunders200ResponseResultsInnerRolesInner `json:"roles,omitempty"`
	// An URL that will get you a list of all the sources published by this publisher.
	SourcesApiUrl *string `json:"sources_api_url,omitempty"`
	SummaryStats *ListPublishers200ResponseResultsInnerSummaryStats `json:"summary_stats,omitempty"`
	// The last time anything in this author object changed. Formatted as ISO 8601 extended format without time zone designator.
	UpdatedDate *string `json:"updated_date,omitempty"`
	// The number of works published by this publisher.
	WorksCount *int32 `json:"works_count,omitempty"`
}

// NewListPublishers200ResponseResultsInner instantiates a new ListPublishers200ResponseResultsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListPublishers200ResponseResultsInner() *ListPublishers200ResponseResultsInner {
	this := ListPublishers200ResponseResultsInner{}
	return &this
}

// NewListPublishers200ResponseResultsInnerWithDefaults instantiates a new ListPublishers200ResponseResultsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListPublishers200ResponseResultsInnerWithDefaults() *ListPublishers200ResponseResultsInner {
	this := ListPublishers200ResponseResultsInner{}
	return &this
}

// GetAlternateTitles returns the AlternateTitles field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetAlternateTitles() []string {
	if o == nil || IsNil(o.AlternateTitles) {
		var ret []string
		return ret
	}
	return o.AlternateTitles
}

// GetAlternateTitlesOk returns a tuple with the AlternateTitles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetAlternateTitlesOk() ([]string, bool) {
	if o == nil || IsNil(o.AlternateTitles) {
		return nil, false
	}
	return o.AlternateTitles, true
}

// HasAlternateTitles returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasAlternateTitles() bool {
	if o != nil && !IsNil(o.AlternateTitles) {
		return true
	}

	return false
}

// SetAlternateTitles gets a reference to the given []string and assigns it to the AlternateTitles field.
func (o *ListPublishers200ResponseResultsInner) SetAlternateTitles(v []string) {
	o.AlternateTitles = v
}

// GetCitedByCount returns the CitedByCount field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetCitedByCount() int32 {
	if o == nil || IsNil(o.CitedByCount) {
		var ret int32
		return ret
	}
	return *o.CitedByCount
}

// GetCitedByCountOk returns a tuple with the CitedByCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetCitedByCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CitedByCount) {
		return nil, false
	}
	return o.CitedByCount, true
}

// HasCitedByCount returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasCitedByCount() bool {
	if o != nil && !IsNil(o.CitedByCount) {
		return true
	}

	return false
}

// SetCitedByCount gets a reference to the given int32 and assigns it to the CitedByCount field.
func (o *ListPublishers200ResponseResultsInner) SetCitedByCount(v int32) {
	o.CitedByCount = &v
}

// GetCountryCodes returns the CountryCodes field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetCountryCodes() []string {
	if o == nil || IsNil(o.CountryCodes) {
		var ret []string
		return ret
	}
	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetCountryCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.CountryCodes) {
		return nil, false
	}
	return o.CountryCodes, true
}

// HasCountryCodes returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasCountryCodes() bool {
	if o != nil && !IsNil(o.CountryCodes) {
		return true
	}

	return false
}

// SetCountryCodes gets a reference to the given []string and assigns it to the CountryCodes field.
func (o *ListPublishers200ResponseResultsInner) SetCountryCodes(v []string) {
	o.CountryCodes = v
}

// GetCountsByYear returns the CountsByYear field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetCountsByYear() []ListAuthors200ResponseResultsInnerCountsByYearInner {
	if o == nil || IsNil(o.CountsByYear) {
		var ret []ListAuthors200ResponseResultsInnerCountsByYearInner
		return ret
	}
	return o.CountsByYear
}

// GetCountsByYearOk returns a tuple with the CountsByYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetCountsByYearOk() ([]ListAuthors200ResponseResultsInnerCountsByYearInner, bool) {
	if o == nil || IsNil(o.CountsByYear) {
		return nil, false
	}
	return o.CountsByYear, true
}

// HasCountsByYear returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasCountsByYear() bool {
	if o != nil && !IsNil(o.CountsByYear) {
		return true
	}

	return false
}

// SetCountsByYear gets a reference to the given []ListAuthors200ResponseResultsInnerCountsByYearInner and assigns it to the CountsByYear field.
func (o *ListPublishers200ResponseResultsInner) SetCountsByYear(v []ListAuthors200ResponseResultsInnerCountsByYearInner) {
	o.CountsByYear = v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *ListPublishers200ResponseResultsInner) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ListPublishers200ResponseResultsInner) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHierarchyLevel returns the HierarchyLevel field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetHierarchyLevel() int32 {
	if o == nil || IsNil(o.HierarchyLevel) {
		var ret int32
		return ret
	}
	return *o.HierarchyLevel
}

// GetHierarchyLevelOk returns a tuple with the HierarchyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetHierarchyLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.HierarchyLevel) {
		return nil, false
	}
	return o.HierarchyLevel, true
}

// HasHierarchyLevel returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasHierarchyLevel() bool {
	if o != nil && !IsNil(o.HierarchyLevel) {
		return true
	}

	return false
}

// SetHierarchyLevel gets a reference to the given int32 and assigns it to the HierarchyLevel field.
func (o *ListPublishers200ResponseResultsInner) SetHierarchyLevel(v int32) {
	o.HierarchyLevel = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListPublishers200ResponseResultsInner) SetId(v string) {
	o.Id = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetIds() ListPublishers200ResponseResultsInnerIds {
	if o == nil || IsNil(o.Ids) {
		var ret ListPublishers200ResponseResultsInnerIds
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetIdsOk() (*ListPublishers200ResponseResultsInnerIds, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given ListPublishers200ResponseResultsInnerIds and assigns it to the Ids field.
func (o *ListPublishers200ResponseResultsInner) SetIds(v ListPublishers200ResponseResultsInnerIds) {
	o.Ids = &v
}

// GetImageThumbnailUrl returns the ImageThumbnailUrl field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetImageThumbnailUrl() string {
	if o == nil || IsNil(o.ImageThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ImageThumbnailUrl
}

// GetImageThumbnailUrlOk returns a tuple with the ImageThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetImageThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageThumbnailUrl) {
		return nil, false
	}
	return o.ImageThumbnailUrl, true
}

// HasImageThumbnailUrl returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasImageThumbnailUrl() bool {
	if o != nil && !IsNil(o.ImageThumbnailUrl) {
		return true
	}

	return false
}

// SetImageThumbnailUrl gets a reference to the given string and assigns it to the ImageThumbnailUrl field.
func (o *ListPublishers200ResponseResultsInner) SetImageThumbnailUrl(v string) {
	o.ImageThumbnailUrl = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetImageUrl() string {
	if o == nil || IsNil(o.ImageUrl) {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ImageUrl) {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasImageUrl() bool {
	if o != nil && !IsNil(o.ImageUrl) {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *ListPublishers200ResponseResultsInner) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetLineage returns the Lineage field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetLineage() []string {
	if o == nil || IsNil(o.Lineage) {
		var ret []string
		return ret
	}
	return o.Lineage
}

// GetLineageOk returns a tuple with the Lineage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetLineageOk() ([]string, bool) {
	if o == nil || IsNil(o.Lineage) {
		return nil, false
	}
	return o.Lineage, true
}

// HasLineage returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasLineage() bool {
	if o != nil && !IsNil(o.Lineage) {
		return true
	}

	return false
}

// SetLineage gets a reference to the given []string and assigns it to the Lineage field.
func (o *ListPublishers200ResponseResultsInner) SetLineage(v []string) {
	o.Lineage = v
}

// GetParentPublisher returns the ParentPublisher field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ListPublishers200ResponseResultsInner) GetParentPublisher() ListPublishers200ResponseResultsInnerParentPublisher {
	if o == nil || IsNil(o.ParentPublisher.Get()) {
		var ret ListPublishers200ResponseResultsInnerParentPublisher
		return ret
	}
	return *o.ParentPublisher.Get()
}

// GetParentPublisherOk returns a tuple with the ParentPublisher field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListPublishers200ResponseResultsInner) GetParentPublisherOk() (*ListPublishers200ResponseResultsInnerParentPublisher, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentPublisher.Get(), o.ParentPublisher.IsSet()
}

// HasParentPublisher returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasParentPublisher() bool {
	if o != nil && o.ParentPublisher.IsSet() {
		return true
	}

	return false
}

// SetParentPublisher gets a reference to the given NullableListPublishers200ResponseResultsInnerParentPublisher and assigns it to the ParentPublisher field.
func (o *ListPublishers200ResponseResultsInner) SetParentPublisher(v ListPublishers200ResponseResultsInnerParentPublisher) {
	o.ParentPublisher.Set(&v)
}
// SetParentPublisherNil sets the value for ParentPublisher to be an explicit nil
func (o *ListPublishers200ResponseResultsInner) SetParentPublisherNil() {
	o.ParentPublisher.Set(nil)
}

// UnsetParentPublisher ensures that no value is present for ParentPublisher, not even an explicit nil
func (o *ListPublishers200ResponseResultsInner) UnsetParentPublisher() {
	o.ParentPublisher.Unset()
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetRoles() []ListFunders200ResponseResultsInnerRolesInner {
	if o == nil || IsNil(o.Roles) {
		var ret []ListFunders200ResponseResultsInnerRolesInner
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetRolesOk() ([]ListFunders200ResponseResultsInnerRolesInner, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []ListFunders200ResponseResultsInnerRolesInner and assigns it to the Roles field.
func (o *ListPublishers200ResponseResultsInner) SetRoles(v []ListFunders200ResponseResultsInnerRolesInner) {
	o.Roles = v
}

// GetSourcesApiUrl returns the SourcesApiUrl field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetSourcesApiUrl() string {
	if o == nil || IsNil(o.SourcesApiUrl) {
		var ret string
		return ret
	}
	return *o.SourcesApiUrl
}

// GetSourcesApiUrlOk returns a tuple with the SourcesApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetSourcesApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SourcesApiUrl) {
		return nil, false
	}
	return o.SourcesApiUrl, true
}

// HasSourcesApiUrl returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasSourcesApiUrl() bool {
	if o != nil && !IsNil(o.SourcesApiUrl) {
		return true
	}

	return false
}

// SetSourcesApiUrl gets a reference to the given string and assigns it to the SourcesApiUrl field.
func (o *ListPublishers200ResponseResultsInner) SetSourcesApiUrl(v string) {
	o.SourcesApiUrl = &v
}

// GetSummaryStats returns the SummaryStats field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetSummaryStats() ListPublishers200ResponseResultsInnerSummaryStats {
	if o == nil || IsNil(o.SummaryStats) {
		var ret ListPublishers200ResponseResultsInnerSummaryStats
		return ret
	}
	return *o.SummaryStats
}

// GetSummaryStatsOk returns a tuple with the SummaryStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetSummaryStatsOk() (*ListPublishers200ResponseResultsInnerSummaryStats, bool) {
	if o == nil || IsNil(o.SummaryStats) {
		return nil, false
	}
	return o.SummaryStats, true
}

// HasSummaryStats returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasSummaryStats() bool {
	if o != nil && !IsNil(o.SummaryStats) {
		return true
	}

	return false
}

// SetSummaryStats gets a reference to the given ListPublishers200ResponseResultsInnerSummaryStats and assigns it to the SummaryStats field.
func (o *ListPublishers200ResponseResultsInner) SetSummaryStats(v ListPublishers200ResponseResultsInnerSummaryStats) {
	o.SummaryStats = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetUpdatedDate() string {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret string
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given string and assigns it to the UpdatedDate field.
func (o *ListPublishers200ResponseResultsInner) SetUpdatedDate(v string) {
	o.UpdatedDate = &v
}

// GetWorksCount returns the WorksCount field value if set, zero value otherwise.
func (o *ListPublishers200ResponseResultsInner) GetWorksCount() int32 {
	if o == nil || IsNil(o.WorksCount) {
		var ret int32
		return ret
	}
	return *o.WorksCount
}

// GetWorksCountOk returns a tuple with the WorksCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListPublishers200ResponseResultsInner) GetWorksCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WorksCount) {
		return nil, false
	}
	return o.WorksCount, true
}

// HasWorksCount returns a boolean if a field has been set.
func (o *ListPublishers200ResponseResultsInner) HasWorksCount() bool {
	if o != nil && !IsNil(o.WorksCount) {
		return true
	}

	return false
}

// SetWorksCount gets a reference to the given int32 and assigns it to the WorksCount field.
func (o *ListPublishers200ResponseResultsInner) SetWorksCount(v int32) {
	o.WorksCount = &v
}

func (o ListPublishers200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListPublishers200ResponseResultsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlternateTitles) {
		toSerialize["alternate_titles"] = o.AlternateTitles
	}
	if !IsNil(o.CitedByCount) {
		toSerialize["cited_by_count"] = o.CitedByCount
	}
	if !IsNil(o.CountryCodes) {
		toSerialize["country_codes"] = o.CountryCodes
	}
	if !IsNil(o.CountsByYear) {
		toSerialize["counts_by_year"] = o.CountsByYear
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.HierarchyLevel) {
		toSerialize["hierarchy_level"] = o.HierarchyLevel
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.ImageThumbnailUrl) {
		toSerialize["image_thumbnail_url"] = o.ImageThumbnailUrl
	}
	if !IsNil(o.ImageUrl) {
		toSerialize["image_url"] = o.ImageUrl
	}
	if !IsNil(o.Lineage) {
		toSerialize["lineage"] = o.Lineage
	}
	if o.ParentPublisher.IsSet() {
		toSerialize["parent_publisher"] = o.ParentPublisher.Get()
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.SourcesApiUrl) {
		toSerialize["sources_api_url"] = o.SourcesApiUrl
	}
	if !IsNil(o.SummaryStats) {
		toSerialize["summary_stats"] = o.SummaryStats
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	if !IsNil(o.WorksCount) {
		toSerialize["works_count"] = o.WorksCount
	}
	return toSerialize, nil
}

type NullableListPublishers200ResponseResultsInner struct {
	value *ListPublishers200ResponseResultsInner
	isSet bool
}

func (v NullableListPublishers200ResponseResultsInner) Get() *ListPublishers200ResponseResultsInner {
	return v.value
}

func (v *NullableListPublishers200ResponseResultsInner) Set(val *ListPublishers200ResponseResultsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListPublishers200ResponseResultsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListPublishers200ResponseResultsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListPublishers200ResponseResultsInner(val *ListPublishers200ResponseResultsInner) *NullableListPublishers200ResponseResultsInner {
	return &NullableListPublishers200ResponseResultsInner{value: val, isSet: true}
}

func (v NullableListPublishers200ResponseResultsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListPublishers200ResponseResultsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


