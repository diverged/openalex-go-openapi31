/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListFunders200ResponseResultsInnerIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListFunders200ResponseResultsInnerIds{}

// ListFunders200ResponseResultsInnerIds All the external identifiers that we know about for this funder.
type ListFunders200ResponseResultsInnerIds struct {
	Openalex *string `json:"openalex,omitempty"`
	Ror *string `json:"ror,omitempty"`
	Wikidata *string `json:"wikidata,omitempty"`
	Crossref *string `json:"crossref,omitempty"`
	Doi *string `json:"doi,omitempty"`
}

// NewListFunders200ResponseResultsInnerIds instantiates a new ListFunders200ResponseResultsInnerIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListFunders200ResponseResultsInnerIds() *ListFunders200ResponseResultsInnerIds {
	this := ListFunders200ResponseResultsInnerIds{}
	return &this
}

// NewListFunders200ResponseResultsInnerIdsWithDefaults instantiates a new ListFunders200ResponseResultsInnerIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListFunders200ResponseResultsInnerIdsWithDefaults() *ListFunders200ResponseResultsInnerIds {
	this := ListFunders200ResponseResultsInnerIds{}
	return &this
}

// GetOpenalex returns the Openalex field value if set, zero value otherwise.
func (o *ListFunders200ResponseResultsInnerIds) GetOpenalex() string {
	if o == nil || IsNil(o.Openalex) {
		var ret string
		return ret
	}
	return *o.Openalex
}

// GetOpenalexOk returns a tuple with the Openalex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFunders200ResponseResultsInnerIds) GetOpenalexOk() (*string, bool) {
	if o == nil || IsNil(o.Openalex) {
		return nil, false
	}
	return o.Openalex, true
}

// HasOpenalex returns a boolean if a field has been set.
func (o *ListFunders200ResponseResultsInnerIds) HasOpenalex() bool {
	if o != nil && !IsNil(o.Openalex) {
		return true
	}

	return false
}

// SetOpenalex gets a reference to the given string and assigns it to the Openalex field.
func (o *ListFunders200ResponseResultsInnerIds) SetOpenalex(v string) {
	o.Openalex = &v
}

// GetRor returns the Ror field value if set, zero value otherwise.
func (o *ListFunders200ResponseResultsInnerIds) GetRor() string {
	if o == nil || IsNil(o.Ror) {
		var ret string
		return ret
	}
	return *o.Ror
}

// GetRorOk returns a tuple with the Ror field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFunders200ResponseResultsInnerIds) GetRorOk() (*string, bool) {
	if o == nil || IsNil(o.Ror) {
		return nil, false
	}
	return o.Ror, true
}

// HasRor returns a boolean if a field has been set.
func (o *ListFunders200ResponseResultsInnerIds) HasRor() bool {
	if o != nil && !IsNil(o.Ror) {
		return true
	}

	return false
}

// SetRor gets a reference to the given string and assigns it to the Ror field.
func (o *ListFunders200ResponseResultsInnerIds) SetRor(v string) {
	o.Ror = &v
}

// GetWikidata returns the Wikidata field value if set, zero value otherwise.
func (o *ListFunders200ResponseResultsInnerIds) GetWikidata() string {
	if o == nil || IsNil(o.Wikidata) {
		var ret string
		return ret
	}
	return *o.Wikidata
}

// GetWikidataOk returns a tuple with the Wikidata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFunders200ResponseResultsInnerIds) GetWikidataOk() (*string, bool) {
	if o == nil || IsNil(o.Wikidata) {
		return nil, false
	}
	return o.Wikidata, true
}

// HasWikidata returns a boolean if a field has been set.
func (o *ListFunders200ResponseResultsInnerIds) HasWikidata() bool {
	if o != nil && !IsNil(o.Wikidata) {
		return true
	}

	return false
}

// SetWikidata gets a reference to the given string and assigns it to the Wikidata field.
func (o *ListFunders200ResponseResultsInnerIds) SetWikidata(v string) {
	o.Wikidata = &v
}

// GetCrossref returns the Crossref field value if set, zero value otherwise.
func (o *ListFunders200ResponseResultsInnerIds) GetCrossref() string {
	if o == nil || IsNil(o.Crossref) {
		var ret string
		return ret
	}
	return *o.Crossref
}

// GetCrossrefOk returns a tuple with the Crossref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFunders200ResponseResultsInnerIds) GetCrossrefOk() (*string, bool) {
	if o == nil || IsNil(o.Crossref) {
		return nil, false
	}
	return o.Crossref, true
}

// HasCrossref returns a boolean if a field has been set.
func (o *ListFunders200ResponseResultsInnerIds) HasCrossref() bool {
	if o != nil && !IsNil(o.Crossref) {
		return true
	}

	return false
}

// SetCrossref gets a reference to the given string and assigns it to the Crossref field.
func (o *ListFunders200ResponseResultsInnerIds) SetCrossref(v string) {
	o.Crossref = &v
}

// GetDoi returns the Doi field value if set, zero value otherwise.
func (o *ListFunders200ResponseResultsInnerIds) GetDoi() string {
	if o == nil || IsNil(o.Doi) {
		var ret string
		return ret
	}
	return *o.Doi
}

// GetDoiOk returns a tuple with the Doi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListFunders200ResponseResultsInnerIds) GetDoiOk() (*string, bool) {
	if o == nil || IsNil(o.Doi) {
		return nil, false
	}
	return o.Doi, true
}

// HasDoi returns a boolean if a field has been set.
func (o *ListFunders200ResponseResultsInnerIds) HasDoi() bool {
	if o != nil && !IsNil(o.Doi) {
		return true
	}

	return false
}

// SetDoi gets a reference to the given string and assigns it to the Doi field.
func (o *ListFunders200ResponseResultsInnerIds) SetDoi(v string) {
	o.Doi = &v
}

func (o ListFunders200ResponseResultsInnerIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListFunders200ResponseResultsInnerIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Openalex) {
		toSerialize["openalex"] = o.Openalex
	}
	if !IsNil(o.Ror) {
		toSerialize["ror"] = o.Ror
	}
	if !IsNil(o.Wikidata) {
		toSerialize["wikidata"] = o.Wikidata
	}
	if !IsNil(o.Crossref) {
		toSerialize["crossref"] = o.Crossref
	}
	if !IsNil(o.Doi) {
		toSerialize["doi"] = o.Doi
	}
	return toSerialize, nil
}

type NullableListFunders200ResponseResultsInnerIds struct {
	value *ListFunders200ResponseResultsInnerIds
	isSet bool
}

func (v NullableListFunders200ResponseResultsInnerIds) Get() *ListFunders200ResponseResultsInnerIds {
	return v.value
}

func (v *NullableListFunders200ResponseResultsInnerIds) Set(val *ListFunders200ResponseResultsInnerIds) {
	v.value = val
	v.isSet = true
}

func (v NullableListFunders200ResponseResultsInnerIds) IsSet() bool {
	return v.isSet
}

func (v *NullableListFunders200ResponseResultsInnerIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListFunders200ResponseResultsInnerIds(val *ListFunders200ResponseResultsInnerIds) *NullableListFunders200ResponseResultsInnerIds {
	return &NullableListFunders200ResponseResultsInnerIds{value: val, isSet: true}
}

func (v NullableListFunders200ResponseResultsInnerIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListFunders200ResponseResultsInnerIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


