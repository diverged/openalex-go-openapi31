/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListWorks200ResponseResultsInnerPrimaryTopic type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWorks200ResponseResultsInnerPrimaryTopic{}

// ListWorks200ResponseResultsInnerPrimaryTopic The top ranked Topic for this work.
type ListWorks200ResponseResultsInnerPrimaryTopic struct {
	// The OpenAlex ID for this topic.
	Id string `json:"id"`
	// The English-language label of the topic.
	DisplayName string `json:"display_name"`
	// A description of this topic, generated by AI.
	Description *string `json:"description,omitempty"`
	// The strength of the connection between the work and this topic.
	Score *float32 `json:"score,omitempty"`
	Subfield *ListTopics200ResponseResultsInnerSubfield `json:"subfield,omitempty"`
	Field *ListTopics200ResponseResultsInnerField `json:"field,omitempty"`
	Domain *ListTopics200ResponseResultsInnerDomain `json:"domain,omitempty"`
	Ids *ListTopics200ResponseResultsInnerIds `json:"ids,omitempty"`
	// Keywords consisting of one or several words each, meant to represent the content of the papers in the topic.
	Keywords []string `json:"keywords,omitempty"`
	// The number of works tagged with this topic.
	WorksCount *int32 `json:"works_count,omitempty"`
	// The last time anything in this author object changed. Formatted as ISO 8601 extended format without time zone designator.
	UpdatedDate *string `json:"updated_date,omitempty"`
	// The number of citations to works tagged with this topic.
	CitedByCount *int32 `json:"cited_by_count,omitempty"`
	// URL to retrieve works tagged with this topic.
	WorksApiUrl *string `json:"works_api_url,omitempty"`
	// The date this topic was created in the OpenAlex database, expressed as an ISO 8601 date string.
	CreatedDate *string `json:"created_date,omitempty"`
}

type _ListWorks200ResponseResultsInnerPrimaryTopic ListWorks200ResponseResultsInnerPrimaryTopic

// NewListWorks200ResponseResultsInnerPrimaryTopic instantiates a new ListWorks200ResponseResultsInnerPrimaryTopic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWorks200ResponseResultsInnerPrimaryTopic(id string, displayName string) *ListWorks200ResponseResultsInnerPrimaryTopic {
	this := ListWorks200ResponseResultsInnerPrimaryTopic{}
	this.Id = id
	this.DisplayName = displayName
	return &this
}

// NewListWorks200ResponseResultsInnerPrimaryTopicWithDefaults instantiates a new ListWorks200ResponseResultsInnerPrimaryTopic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWorks200ResponseResultsInnerPrimaryTopicWithDefaults() *ListWorks200ResponseResultsInnerPrimaryTopic {
	this := ListWorks200ResponseResultsInnerPrimaryTopic{}
	return &this
}

// GetId returns the Id field value
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetId(v string) {
	o.Id = v
}

// GetDisplayName returns the DisplayName field value
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetDescription(v string) {
	o.Description = &v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetScore(v float32) {
	o.Score = &v
}

// GetSubfield returns the Subfield field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetSubfield() ListTopics200ResponseResultsInnerSubfield {
	if o == nil || IsNil(o.Subfield) {
		var ret ListTopics200ResponseResultsInnerSubfield
		return ret
	}
	return *o.Subfield
}

// GetSubfieldOk returns a tuple with the Subfield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetSubfieldOk() (*ListTopics200ResponseResultsInnerSubfield, bool) {
	if o == nil || IsNil(o.Subfield) {
		return nil, false
	}
	return o.Subfield, true
}

// HasSubfield returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasSubfield() bool {
	if o != nil && !IsNil(o.Subfield) {
		return true
	}

	return false
}

// SetSubfield gets a reference to the given ListTopics200ResponseResultsInnerSubfield and assigns it to the Subfield field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetSubfield(v ListTopics200ResponseResultsInnerSubfield) {
	o.Subfield = &v
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetField() ListTopics200ResponseResultsInnerField {
	if o == nil || IsNil(o.Field) {
		var ret ListTopics200ResponseResultsInnerField
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetFieldOk() (*ListTopics200ResponseResultsInnerField, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given ListTopics200ResponseResultsInnerField and assigns it to the Field field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetField(v ListTopics200ResponseResultsInnerField) {
	o.Field = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDomain() ListTopics200ResponseResultsInnerDomain {
	if o == nil || IsNil(o.Domain) {
		var ret ListTopics200ResponseResultsInnerDomain
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetDomainOk() (*ListTopics200ResponseResultsInnerDomain, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given ListTopics200ResponseResultsInnerDomain and assigns it to the Domain field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetDomain(v ListTopics200ResponseResultsInnerDomain) {
	o.Domain = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetIds() ListTopics200ResponseResultsInnerIds {
	if o == nil || IsNil(o.Ids) {
		var ret ListTopics200ResponseResultsInnerIds
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetIdsOk() (*ListTopics200ResponseResultsInnerIds, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given ListTopics200ResponseResultsInnerIds and assigns it to the Ids field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetIds(v ListTopics200ResponseResultsInnerIds) {
	o.Ids = &v
}

// GetKeywords returns the Keywords field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetKeywords() []string {
	if o == nil || IsNil(o.Keywords) {
		var ret []string
		return ret
	}
	return o.Keywords
}

// GetKeywordsOk returns a tuple with the Keywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.Keywords) {
		return nil, false
	}
	return o.Keywords, true
}

// HasKeywords returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasKeywords() bool {
	if o != nil && !IsNil(o.Keywords) {
		return true
	}

	return false
}

// SetKeywords gets a reference to the given []string and assigns it to the Keywords field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetKeywords(v []string) {
	o.Keywords = v
}

// GetWorksCount returns the WorksCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetWorksCount() int32 {
	if o == nil || IsNil(o.WorksCount) {
		var ret int32
		return ret
	}
	return *o.WorksCount
}

// GetWorksCountOk returns a tuple with the WorksCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetWorksCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WorksCount) {
		return nil, false
	}
	return o.WorksCount, true
}

// HasWorksCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasWorksCount() bool {
	if o != nil && !IsNil(o.WorksCount) {
		return true
	}

	return false
}

// SetWorksCount gets a reference to the given int32 and assigns it to the WorksCount field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetWorksCount(v int32) {
	o.WorksCount = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetUpdatedDate() string {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret string
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given string and assigns it to the UpdatedDate field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetUpdatedDate(v string) {
	o.UpdatedDate = &v
}

// GetCitedByCount returns the CitedByCount field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetCitedByCount() int32 {
	if o == nil || IsNil(o.CitedByCount) {
		var ret int32
		return ret
	}
	return *o.CitedByCount
}

// GetCitedByCountOk returns a tuple with the CitedByCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetCitedByCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CitedByCount) {
		return nil, false
	}
	return o.CitedByCount, true
}

// HasCitedByCount returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasCitedByCount() bool {
	if o != nil && !IsNil(o.CitedByCount) {
		return true
	}

	return false
}

// SetCitedByCount gets a reference to the given int32 and assigns it to the CitedByCount field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetCitedByCount(v int32) {
	o.CitedByCount = &v
}

// GetWorksApiUrl returns the WorksApiUrl field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetWorksApiUrl() string {
	if o == nil || IsNil(o.WorksApiUrl) {
		var ret string
		return ret
	}
	return *o.WorksApiUrl
}

// GetWorksApiUrlOk returns a tuple with the WorksApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetWorksApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WorksApiUrl) {
		return nil, false
	}
	return o.WorksApiUrl, true
}

// HasWorksApiUrl returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasWorksApiUrl() bool {
	if o != nil && !IsNil(o.WorksApiUrl) {
		return true
	}

	return false
}

// SetWorksApiUrl gets a reference to the given string and assigns it to the WorksApiUrl field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetWorksApiUrl(v string) {
	o.WorksApiUrl = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *ListWorks200ResponseResultsInnerPrimaryTopic) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

func (o ListWorks200ResponseResultsInnerPrimaryTopic) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWorks200ResponseResultsInnerPrimaryTopic) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["display_name"] = o.DisplayName
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Subfield) {
		toSerialize["subfield"] = o.Subfield
	}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.Keywords) {
		toSerialize["keywords"] = o.Keywords
	}
	if !IsNil(o.WorksCount) {
		toSerialize["works_count"] = o.WorksCount
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updated_date"] = o.UpdatedDate
	}
	if !IsNil(o.CitedByCount) {
		toSerialize["cited_by_count"] = o.CitedByCount
	}
	if !IsNil(o.WorksApiUrl) {
		toSerialize["works_api_url"] = o.WorksApiUrl
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["created_date"] = o.CreatedDate
	}
	return toSerialize, nil
}

func (o *ListWorks200ResponseResultsInnerPrimaryTopic) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"display_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListWorks200ResponseResultsInnerPrimaryTopic := _ListWorks200ResponseResultsInnerPrimaryTopic{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListWorks200ResponseResultsInnerPrimaryTopic)

	if err != nil {
		return err
	}

	*o = ListWorks200ResponseResultsInnerPrimaryTopic(varListWorks200ResponseResultsInnerPrimaryTopic)

	return err
}

type NullableListWorks200ResponseResultsInnerPrimaryTopic struct {
	value *ListWorks200ResponseResultsInnerPrimaryTopic
	isSet bool
}

func (v NullableListWorks200ResponseResultsInnerPrimaryTopic) Get() *ListWorks200ResponseResultsInnerPrimaryTopic {
	return v.value
}

func (v *NullableListWorks200ResponseResultsInnerPrimaryTopic) Set(val *ListWorks200ResponseResultsInnerPrimaryTopic) {
	v.value = val
	v.isSet = true
}

func (v NullableListWorks200ResponseResultsInnerPrimaryTopic) IsSet() bool {
	return v.isSet
}

func (v *NullableListWorks200ResponseResultsInnerPrimaryTopic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWorks200ResponseResultsInnerPrimaryTopic(val *ListWorks200ResponseResultsInnerPrimaryTopic) *NullableListWorks200ResponseResultsInnerPrimaryTopic {
	return &NullableListWorks200ResponseResultsInnerPrimaryTopic{value: val, isSet: true}
}

func (v NullableListWorks200ResponseResultsInnerPrimaryTopic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWorks200ResponseResultsInnerPrimaryTopic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


