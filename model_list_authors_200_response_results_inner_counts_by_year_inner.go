/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListAuthors200ResponseResultsInnerCountsByYearInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListAuthors200ResponseResultsInnerCountsByYearInner{}

// ListAuthors200ResponseResultsInnerCountsByYearInner struct for ListAuthors200ResponseResultsInnerCountsByYearInner
type ListAuthors200ResponseResultsInnerCountsByYearInner struct {
	Year *int32 `json:"year,omitempty"`
	WorksCount *int32 `json:"works_count,omitempty"`
	CitedByCount *int32 `json:"cited_by_count,omitempty"`
}

// NewListAuthors200ResponseResultsInnerCountsByYearInner instantiates a new ListAuthors200ResponseResultsInnerCountsByYearInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAuthors200ResponseResultsInnerCountsByYearInner() *ListAuthors200ResponseResultsInnerCountsByYearInner {
	this := ListAuthors200ResponseResultsInnerCountsByYearInner{}
	return &this
}

// NewListAuthors200ResponseResultsInnerCountsByYearInnerWithDefaults instantiates a new ListAuthors200ResponseResultsInnerCountsByYearInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAuthors200ResponseResultsInnerCountsByYearInnerWithDefaults() *ListAuthors200ResponseResultsInnerCountsByYearInner {
	this := ListAuthors200ResponseResultsInnerCountsByYearInner{}
	return &this
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetYear() int32 {
	if o == nil || IsNil(o.Year) {
		var ret int32
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetYearOk() (*int32, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int32 and assigns it to the Year field.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) SetYear(v int32) {
	o.Year = &v
}

// GetWorksCount returns the WorksCount field value if set, zero value otherwise.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetWorksCount() int32 {
	if o == nil || IsNil(o.WorksCount) {
		var ret int32
		return ret
	}
	return *o.WorksCount
}

// GetWorksCountOk returns a tuple with the WorksCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetWorksCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WorksCount) {
		return nil, false
	}
	return o.WorksCount, true
}

// HasWorksCount returns a boolean if a field has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) HasWorksCount() bool {
	if o != nil && !IsNil(o.WorksCount) {
		return true
	}

	return false
}

// SetWorksCount gets a reference to the given int32 and assigns it to the WorksCount field.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) SetWorksCount(v int32) {
	o.WorksCount = &v
}

// GetCitedByCount returns the CitedByCount field value if set, zero value otherwise.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetCitedByCount() int32 {
	if o == nil || IsNil(o.CitedByCount) {
		var ret int32
		return ret
	}
	return *o.CitedByCount
}

// GetCitedByCountOk returns a tuple with the CitedByCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) GetCitedByCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CitedByCount) {
		return nil, false
	}
	return o.CitedByCount, true
}

// HasCitedByCount returns a boolean if a field has been set.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) HasCitedByCount() bool {
	if o != nil && !IsNil(o.CitedByCount) {
		return true
	}

	return false
}

// SetCitedByCount gets a reference to the given int32 and assigns it to the CitedByCount field.
func (o *ListAuthors200ResponseResultsInnerCountsByYearInner) SetCitedByCount(v int32) {
	o.CitedByCount = &v
}

func (o ListAuthors200ResponseResultsInnerCountsByYearInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListAuthors200ResponseResultsInnerCountsByYearInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.WorksCount) {
		toSerialize["works_count"] = o.WorksCount
	}
	if !IsNil(o.CitedByCount) {
		toSerialize["cited_by_count"] = o.CitedByCount
	}
	return toSerialize, nil
}

type NullableListAuthors200ResponseResultsInnerCountsByYearInner struct {
	value *ListAuthors200ResponseResultsInnerCountsByYearInner
	isSet bool
}

func (v NullableListAuthors200ResponseResultsInnerCountsByYearInner) Get() *ListAuthors200ResponseResultsInnerCountsByYearInner {
	return v.value
}

func (v *NullableListAuthors200ResponseResultsInnerCountsByYearInner) Set(val *ListAuthors200ResponseResultsInnerCountsByYearInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListAuthors200ResponseResultsInnerCountsByYearInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListAuthors200ResponseResultsInnerCountsByYearInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAuthors200ResponseResultsInnerCountsByYearInner(val *ListAuthors200ResponseResultsInnerCountsByYearInner) *NullableListAuthors200ResponseResultsInnerCountsByYearInner {
	return &NullableListAuthors200ResponseResultsInnerCountsByYearInner{value: val, isSet: true}
}

func (v NullableListAuthors200ResponseResultsInnerCountsByYearInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAuthors200ResponseResultsInnerCountsByYearInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


