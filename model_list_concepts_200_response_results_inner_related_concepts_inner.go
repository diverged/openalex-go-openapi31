/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListConcepts200ResponseResultsInnerRelatedConceptsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListConcepts200ResponseResultsInnerRelatedConceptsInner{}

// ListConcepts200ResponseResultsInnerRelatedConceptsInner struct for ListConcepts200ResponseResultsInnerRelatedConceptsInner
type ListConcepts200ResponseResultsInnerRelatedConceptsInner struct {
	// The OpenAlex ID for this concept.
	Id string `json:"id"`
	// The Wikidata ID for this concept.
	Wikidata *string `json:"wikidata,omitempty"`
	// The human-readable name of the concept.
	DisplayName string `json:"display_name"`
	// The hierarchical level of the concept. Level 0 is the most general, and level 5 is the most specific.
	Level int32 `json:"level"`
	// The strength of association between this concept and the listed concept, on a scale of 0-100.
	Score float32 `json:"score"`
}

type _ListConcepts200ResponseResultsInnerRelatedConceptsInner ListConcepts200ResponseResultsInnerRelatedConceptsInner

// NewListConcepts200ResponseResultsInnerRelatedConceptsInner instantiates a new ListConcepts200ResponseResultsInnerRelatedConceptsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListConcepts200ResponseResultsInnerRelatedConceptsInner(id string, displayName string, level int32, score float32) *ListConcepts200ResponseResultsInnerRelatedConceptsInner {
	this := ListConcepts200ResponseResultsInnerRelatedConceptsInner{}
	this.Id = id
	this.DisplayName = displayName
	this.Level = level
	this.Score = score
	return &this
}

// NewListConcepts200ResponseResultsInnerRelatedConceptsInnerWithDefaults instantiates a new ListConcepts200ResponseResultsInnerRelatedConceptsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListConcepts200ResponseResultsInnerRelatedConceptsInnerWithDefaults() *ListConcepts200ResponseResultsInnerRelatedConceptsInner {
	this := ListConcepts200ResponseResultsInnerRelatedConceptsInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) SetId(v string) {
	o.Id = v
}

// GetWikidata returns the Wikidata field value if set, zero value otherwise.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetWikidata() string {
	if o == nil || IsNil(o.Wikidata) {
		var ret string
		return ret
	}
	return *o.Wikidata
}

// GetWikidataOk returns a tuple with the Wikidata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetWikidataOk() (*string, bool) {
	if o == nil || IsNil(o.Wikidata) {
		return nil, false
	}
	return o.Wikidata, true
}

// HasWikidata returns a boolean if a field has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) HasWikidata() bool {
	if o != nil && !IsNil(o.Wikidata) {
		return true
	}

	return false
}

// SetWikidata gets a reference to the given string and assigns it to the Wikidata field.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) SetWikidata(v string) {
	o.Wikidata = &v
}

// GetDisplayName returns the DisplayName field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetLevel returns the Level field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetLevel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetLevelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) SetLevel(v int32) {
	o.Level = v
}

// GetScore returns the Score field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) SetScore(v float32) {
	o.Score = v
}

func (o ListConcepts200ResponseResultsInnerRelatedConceptsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListConcepts200ResponseResultsInnerRelatedConceptsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Wikidata) {
		toSerialize["wikidata"] = o.Wikidata
	}
	toSerialize["display_name"] = o.DisplayName
	toSerialize["level"] = o.Level
	toSerialize["score"] = o.Score
	return toSerialize, nil
}

func (o *ListConcepts200ResponseResultsInnerRelatedConceptsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"display_name",
		"level",
		"score",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListConcepts200ResponseResultsInnerRelatedConceptsInner := _ListConcepts200ResponseResultsInnerRelatedConceptsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListConcepts200ResponseResultsInnerRelatedConceptsInner)

	if err != nil {
		return err
	}

	*o = ListConcepts200ResponseResultsInnerRelatedConceptsInner(varListConcepts200ResponseResultsInnerRelatedConceptsInner)

	return err
}

type NullableListConcepts200ResponseResultsInnerRelatedConceptsInner struct {
	value *ListConcepts200ResponseResultsInnerRelatedConceptsInner
	isSet bool
}

func (v NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) Get() *ListConcepts200ResponseResultsInnerRelatedConceptsInner {
	return v.value
}

func (v *NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) Set(val *ListConcepts200ResponseResultsInnerRelatedConceptsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListConcepts200ResponseResultsInnerRelatedConceptsInner(val *ListConcepts200ResponseResultsInnerRelatedConceptsInner) *NullableListConcepts200ResponseResultsInnerRelatedConceptsInner {
	return &NullableListConcepts200ResponseResultsInnerRelatedConceptsInner{value: val, isSet: true}
}

func (v NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListConcepts200ResponseResultsInnerRelatedConceptsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


