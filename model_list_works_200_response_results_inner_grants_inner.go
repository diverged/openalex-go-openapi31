/*
OpenAlex API

An OpenAPI specification for the OpenAlex API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListWorks200ResponseResultsInnerGrantsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWorks200ResponseResultsInnerGrantsInner{}

// ListWorks200ResponseResultsInnerGrantsInner struct for ListWorks200ResponseResultsInnerGrantsInner
type ListWorks200ResponseResultsInnerGrantsInner struct {
	// The OpenAlex ID for the funder of this grant.
	Funder string `json:"funder"`
	// The display name of the funder.
	FunderDisplayName string `json:"funder_display_name"`
	// The identifier for this specific grant, as given by the funder.
	AwardId *string `json:"award_id,omitempty"`
}

type _ListWorks200ResponseResultsInnerGrantsInner ListWorks200ResponseResultsInnerGrantsInner

// NewListWorks200ResponseResultsInnerGrantsInner instantiates a new ListWorks200ResponseResultsInnerGrantsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWorks200ResponseResultsInnerGrantsInner(funder string, funderDisplayName string) *ListWorks200ResponseResultsInnerGrantsInner {
	this := ListWorks200ResponseResultsInnerGrantsInner{}
	this.Funder = funder
	this.FunderDisplayName = funderDisplayName
	return &this
}

// NewListWorks200ResponseResultsInnerGrantsInnerWithDefaults instantiates a new ListWorks200ResponseResultsInnerGrantsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWorks200ResponseResultsInnerGrantsInnerWithDefaults() *ListWorks200ResponseResultsInnerGrantsInner {
	this := ListWorks200ResponseResultsInnerGrantsInner{}
	return &this
}

// GetFunder returns the Funder field value
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetFunder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Funder
}

// GetFunderOk returns a tuple with the Funder field value
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetFunderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Funder, true
}

// SetFunder sets field value
func (o *ListWorks200ResponseResultsInnerGrantsInner) SetFunder(v string) {
	o.Funder = v
}

// GetFunderDisplayName returns the FunderDisplayName field value
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetFunderDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FunderDisplayName
}

// GetFunderDisplayNameOk returns a tuple with the FunderDisplayName field value
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetFunderDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FunderDisplayName, true
}

// SetFunderDisplayName sets field value
func (o *ListWorks200ResponseResultsInnerGrantsInner) SetFunderDisplayName(v string) {
	o.FunderDisplayName = v
}

// GetAwardId returns the AwardId field value if set, zero value otherwise.
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetAwardId() string {
	if o == nil || IsNil(o.AwardId) {
		var ret string
		return ret
	}
	return *o.AwardId
}

// GetAwardIdOk returns a tuple with the AwardId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWorks200ResponseResultsInnerGrantsInner) GetAwardIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwardId) {
		return nil, false
	}
	return o.AwardId, true
}

// HasAwardId returns a boolean if a field has been set.
func (o *ListWorks200ResponseResultsInnerGrantsInner) HasAwardId() bool {
	if o != nil && !IsNil(o.AwardId) {
		return true
	}

	return false
}

// SetAwardId gets a reference to the given string and assigns it to the AwardId field.
func (o *ListWorks200ResponseResultsInnerGrantsInner) SetAwardId(v string) {
	o.AwardId = &v
}

func (o ListWorks200ResponseResultsInnerGrantsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWorks200ResponseResultsInnerGrantsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["funder"] = o.Funder
	toSerialize["funder_display_name"] = o.FunderDisplayName
	if !IsNil(o.AwardId) {
		toSerialize["award_id"] = o.AwardId
	}
	return toSerialize, nil
}

func (o *ListWorks200ResponseResultsInnerGrantsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"funder",
		"funder_display_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListWorks200ResponseResultsInnerGrantsInner := _ListWorks200ResponseResultsInnerGrantsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListWorks200ResponseResultsInnerGrantsInner)

	if err != nil {
		return err
	}

	*o = ListWorks200ResponseResultsInnerGrantsInner(varListWorks200ResponseResultsInnerGrantsInner)

	return err
}

type NullableListWorks200ResponseResultsInnerGrantsInner struct {
	value *ListWorks200ResponseResultsInnerGrantsInner
	isSet bool
}

func (v NullableListWorks200ResponseResultsInnerGrantsInner) Get() *ListWorks200ResponseResultsInnerGrantsInner {
	return v.value
}

func (v *NullableListWorks200ResponseResultsInnerGrantsInner) Set(val *ListWorks200ResponseResultsInnerGrantsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListWorks200ResponseResultsInnerGrantsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListWorks200ResponseResultsInnerGrantsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWorks200ResponseResultsInnerGrantsInner(val *ListWorks200ResponseResultsInnerGrantsInner) *NullableListWorks200ResponseResultsInnerGrantsInner {
	return &NullableListWorks200ResponseResultsInnerGrantsInner{value: val, isSet: true}
}

func (v NullableListWorks200ResponseResultsInnerGrantsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWorks200ResponseResultsInnerGrantsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


